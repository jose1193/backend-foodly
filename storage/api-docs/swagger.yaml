openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin

  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/JOSEGONZALEZCR2794_1/APPS369_API/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://www.foodly.world/api/
  - description: SwaggerHub API Auto Mocking
    url: https://www.foodly.world/api
tags:
  - name: SocialAuth
    description: Handles Foodly users social networks authentication

  - name: Users
    description: Handles Foodly users authentication information

  - name: Reset User Password
    description: Handles resetting passwords for Foodly platform users.
  - name: Permissions
    description: Handles Foodly users permissions information
  - name: Roles
    description: Handles Foodly users roles information

  - name: Users Followers
    description: Users Followers Foodly

  - name: Users Data
    description: Users Crud Foodly

  - name: User Addresses
    description: User address management for multiple addresses with labels

  - name: Address Labels
    description: Address label management for categorizing user addresses (Super Admin only)

  - name: Check Username Availability
    description: Check Username availability

  - name: Check Email Availability
    description: Check Email availability

  - name: Categories
    description: Categories Crud Foodly

  - name: Subcategories
    description: Subcategories Crud Foodly

  - name: Services
    description: Services Crud Foodly

  - name: Business
    description: Business Users Foodly

  - name: Business Search
    description: Business Search Foodly

  - name: Business Menus
    description: Business Menus

  - name: Business Food Categories
    description: Business Food Categories

  - name: Business Food Items
    description: Business Food Items

  - name: Business Food Reference Photos
    description: Business Food Reference Photos

  - name: Business Drink Categories
    description: Business Drink Categories

  - name: Business Drink Items
    description: Business Drink Items

  - name: Business Drink Reference Photos
    description: Business Drink Reference Photos

  - name: Business Combos
    description: Business Combos

  - name: Business Combo Photos
    description: Business Combo Images

  - name: Business Cover Images
    description: Business Cover Images

  - name: Business Promotions
    description: Business Promotions

  - name: Business Promotions Media
    description: Business Promotions Images

  - name: Business Favorites
    description: Business Favorites

  - name: Business Menu Favorites
    description: Business Menu Favorites

  - name: Business Food Item Favorites
    description: Business Food Item Favorites

  - name: Business Drink Item Favorites
    description: Business Drink Item Favorites

  - name: Business Promotions Favorites
    description: Business Promotions Favorites

  - name: Business Combos Favorites
    description: Business Combos Favorites

  - name: Business Branch
    description: Business Branch Users Foodly

  - name: Business Branch Cover Images
    description: Business Branches Cover Images

  - name: Branch Promotions
    description: Business Branch Promotions

  - name: Branch Promotions Images
    description: Business Branch Promotions Images

info:
  version: "1.0.0"
  title: FOODLY APIs
  description: The APIs for the APPS 369 Company project

paths:
  /login:
    post:
      tags:
        - Users
      summary: Login user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
        required: true
      responses:
        200:
          description: User logged in successfully
          content:
            application/json:
              example:
                message: "User logged successfully"
                token: "jsutFqXt7zNJizr8vRlUhuLMdYeUxaGSFz4G4uAFe326f380"
                token_type: "Bearer"
                token_created_at: "2025-02-17 18:03:33"
                user:
                  id: 2
                  uuid: "7faca1bc-1f05-4c75-b8a5-20a98bcf8f8c"
                  photo: "https://ui-avatars.com/api/?name=M&color=7F9CF5&background=EBF4FF"
                  name: "Manager"
                  last_name: null
                  username: "manager369"
                  email: "manager@manager.com"
                  email_verified_at: "2025-02-13T15:57:49.000000Z"
                  date_of_birth: null
                  phone: "00000"
                  addresses:
                    [
                      {
                        id: 1,
                        uuid: "550e8400-e29b-41d4-a716-446655440001",
                        address: "123 Main Street",
                        city: "New York",
                        country: "USA",
                        zip_code: "10001",
                        latitude: 40.7128,
                        longitude: -74.0060,
                        address_label:
                          {
                            id: 1,
                            uuid: "660f9500-f39c-51e5-b827-556766550002",
                            name: "Home",
                            description: "Home address",
                            icon: "home",
                            is_active: true,
                          },
                        principal: true,
                        created_at: "2025-02-25T10:30:00.000000Z",
                        updated_at: "2025-02-25T10:30:00.000000Z",
                      },
                    ]
                  terms_and_conditions: false
                  gender: null
                  created_at: "2025-02-13T15:57:49.000000Z"
                  updated_at: "2025-02-13T15:57:49.000000Z"
                  deleted_at: null
                  user_role: "Manager"
                  role_id: 2
                  social_provider: []
                  business: []
                  favorite_businesses:
                    [
                      "9533e911-8edd-41a6-84fc-1187dcab2a8d",
                      "148fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                      "3f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                    ]
                  favorite_menus:
                    [
                      "7533e911-8edd-41a6-84fc-1187dcab2a8d",
                      "248fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                      "5f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                    ]
                  favorite_items:
                    [
                      "6533e911-8edd-41a6-84fc-1187dcab2a8d",
                      "348fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                      "4f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                      "b842c7a3-6d9f-48e1-9c31-e24d58e57fb9",
                    ]
                  favorite_combos:
                    [
                      "b842c7a3-6d9f-48e1-9c31-e24d58e57fb9",
                      "721ae890-fb31-4e92-bd65-0f3782a59c14",
                      "a5d8f617-c352-41b9-8e34-2d6bf9ac41e8",
                    ]
                  saved_promotions:
                    [
                      "8533e911-8edd-41a6-84fc-1187dcab2a8d",
                      "448fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                      "2f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                    ]
                  followers:
                    [
                      "9c8b7654-d3e2-4f1a-b9c8-7654d3e2f1a9",
                      "a1b2c3d4-e5f6-4g5h-6i7j-8k9l0m1n2o3p",
                      "b2c3d4e5-f6g7-5h6i-9j0k-l1m2n3o4p5q6",
                    ]
                  followers_length: 3
                  following:
                    [
                      "c3d4e5f6-g7h8-6i7j-0k1l-m2n3o4p5q6r7",
                      "d4e5f6g7-h8i9-7j8k-1l2m-n3o4p5q6r7s8",
                    ]
                  following_length: 2
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /register:
    post:
      tags:
        - Users
      summary: Register a new user
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UserRegistration"

      responses:
        200:
          description: User registration successful
          content:
            text/plain:
              example: User data was successfully registered
        400:
          $ref: "#/components/responses/BadRequest"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /user:
    get:
      tags:
        - Users
      summary: Get user information
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components

      responses:
        200:
          description: User information retrieved successfully
          content:
            application/json:
              example:
                - uuid: ID-a1b2c3d4-5e6f-7g8h-9i10
                  photo: "https://example.com/profile-photo.png"
                  name: John
                  last_name: Doe
                  username: john_doe
                  email: john@example.com
                  email_verified_at: "2024-01-01T00:00:00Z"
                  phone: "123-456-7890"
                  date_of_birth: 10-01-1990
                  addresses:
                    [
                      {
                        id: 1,
                        uuid: "550e8400-e29b-41d4-a716-446655440001",
                        address: "123 Main Street",
                        city: "New York",
                        country: "USA",
                        zip_code: "10001",
                        latitude: 40.7128,
                        longitude: -74.0060,
                        address_label:
                          {
                            id: 1,
                            uuid: "660f9500-f39c-51e5-b827-556766550002",
                            name: "Home",
                            description: "Home address",
                            icon: "home",
                            is_active: true,
                          },
                        principal: true,
                        created_at: "2025-02-25T10:30:00.000000Z",
                        updated_at: "2025-02-25T10:30:00.000000Z",
                      },
                    ]
                  terms_and_conditions: true
                  gender: "Male"
                  created_at: "2024-01-01T00:00:00Z"
                  updated_at: "2024-01-01T00:00:00Z"
                  deleted_at: null
                  user_role: "Role"
                  role_id: 1
                  social_provider: []
                  business: []
                  favorite_businesses:
                    [
                      "9533e911-8edd-41a6-84fc-1187dcab2a8d",
                      "148fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                      "3f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                    ]
                  favorite_menus:
                    [
                      "7533e911-8edd-41a6-84fc-1187dcab2a8d",
                      "248fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                      "5f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                    ]
                  favorite_items:
                    [
                      "6533e911-8edd-41a6-84fc-1187dcab2a8d",
                      "348fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                      "4f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                      "b842c7a3-6d9f-48e1-9c31-e24d58e57fb9",
                    ]
                  favorite_combos:
                    [
                      "b842c7a3-6d9f-48e1-9c31-e24d58e57fb9",
                      "721ae890-fb31-4e92-bd65-0f3782a59c14",
                      "a5d8f617-c352-41b9-8e34-2d6bf9ac41e8",
                    ]
                  saved_promotions:
                    [
                      "8533e911-8edd-41a6-84fc-1187dcab2a8d",
                      "448fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                      "2f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                    ]
                  followers:
                    [
                      "9c8b7654-d3e2-4f1a-b9c8-7654d3e2f1a9",
                      "a1b2c3d4-e5f6-4g5h-6i7j-8k9l0m1n2o3p",
                      "b2c3d4e5-f6g7-5h6i-9j0k-l1m2n3o4p5q6",
                    ]
                  followers_length: 3
                  following:
                    [
                      "c3d4e5f6-g7h8-6i7j-0k1l-m2n3o4p5q6r7",
                      "d4e5f6g7-h8i9-7j8k-1l2m-n3o4p5q6r7s8",
                    ]
                  following_length: 2

        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /update-password:
    post:
      tags:
        - Users
      summary: Update user's password
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                new_password:
                  type: string

              required:
                - current_password
                - new_password

      responses:
        "200":
          description: Password updated successfully
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/ServerError"

  /forgot-password:
    post:
      tags:
        - Reset User Password
      summary: Forgot password
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ForgotPassword"
        required: true
      responses:
        200:
          description: Password reset instructions sent successfully
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /enter-pin:
    post:
      tags:
        - Reset User Password
      summary: Reset user's password with token and enter PIN
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnterPinPassword"
        required: true
      responses:
        200:
          description: PIN verified. Proceed with password reset
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        429:
          $ref: "#/components/responses/TooManyRequests"
        500:
          $ref: "#/components/responses/ServerError"

  /reset-password:
    post:
      tags:
        - Reset User Password
      summary: Reset user's password with token
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPassword"
        required: true
      responses:
        200:
          description: Reset password instructions sent successfully
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /update-profile:
    post:
      tags:
        - Users
      summary: Update user profile
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateProfile"
        required: true
      responses:
        200:
          description: Profile updated successfully

        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /update-profile-photo:
    post:
      tags:
        - Users
      summary: Update user profile
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateProfilePhoto"
        required: true
      responses:
        200:
          description: Photo Profile updated successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /biometric-login:
    post:
      tags:
        - Users
      summary: User Biometric login
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: User login successfully
          content:
            text/plain:
              example: User logged successfully
        401:
          description: Unauthorized
        500:
          $ref: "#/components/responses/ServerError"

  /logout:
    post:
      tags:
        - Users
      summary: Logout a user

      description: Invalidate the provided bearer token to log out the user.
      responses:
        200:
          description: Token invalidated successfully
        401:
          description: Unauthorized - invalid token or token expired
      security:
        - BearerAuth: []

  /permissions-list:
    get:
      tags:
        - Permissions
      summary: Get all registered permissions
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components

      responses:
        200:
          description: List of registered permissions
          content:
            application/json:
              example:
                - name: Permission 1
                - name: Permission 2
                - name: Permission 3
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /permissions:
    post:
      tags:
        - Permissions
      summary: Store a new permission
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewPermission"
        required: true
      responses:
        200:
          description: New permission created successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /permissions/{id}:
    get:
      tags:
        - Permissions
      summary: Get a permission by ID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/PermissionId"
      responses:
        200:
          description: Permission details retrieved successfully
          content:
            application/json:
              example:
                name: Permission Name
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /permissions-update/{id}:
    put:
      tags:
        - Permissions
      summary: Update a permission by ID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/PermissionId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePermission"
      responses:
        200:
          description: Permission updated successfully

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /permissions-delete/{id}:
    delete:
      tags:
        - Permissions
      summary: Delete a permission by ID
      parameters:
        - $ref: "#/components/parameters/PermissionId"
      security:
        - BearerAuth: []
      responses:
        204:
          description: Permission deleted successfully

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /roles:
    get:
      tags:
        - Roles
      summary: Get all registered roles
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components

      responses:
        200:
          description: List of registered roles
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
              example:
                roles:
                  [
                    { "id": 2, "name": "Manager" },
                    { "id": 3, "name": "Admin" },
                    { "id": 4, "name": "Employee" },
                    { "id": 5, "name": "Customer" },
                  ]

        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /roles/store:
    post:
      tags:
        - Roles
      summary: Store a new Role
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewRole"
        required: true
      responses:
        200:
          description: New Role created successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /roles/{id}:
    get:
      tags:
        - Roles
      summary: Get a role by ID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/RoleId"
      responses:
        200:
          description: Role details retrieved successfully
          content:
            application/json:
              example:
                name: Role Name
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /roles-permissions:
    get:
      tags:
        - Roles
      summary: Get all roles associated with registered permissions.
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components

      responses:
        200:
          description: List of roles associated with registered permissions.
          content:
            application/json:
              example:
                - name: Role 1
                  permissions:
                    - Permission 1
                    - Permission 2
                - name: Role 2
                  permissions:
                    - Permission 2
                    - Permission 3
                - name: Role 3
                  permissions:
                    - Permission 1
                    - Permission 3
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /roles/{id}/edit:
    get:
      tags:
        - Roles
      summary: List of roles and permissions for editing
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/RoleId"
      responses:
        200:
          description: List of roles and permissions for editing
          content:
            application/json:
              example:
                role:
                  id: 1
                  name: Role 1
                permissions:
                  - id: 1
                    name: Permission 1
                  - id: 2
                    name: Permission 2
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /roles-update/{id}:
    put:
      tags:
        - Roles
      summary: Update a role by ID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/RoleId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRole"
      responses:
        200:
          description: Role updated successfully

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /roles-delete/{id}:
    delete:
      tags:
        - Roles
      summary: Delete a Role by ID
      parameters:
        - $ref: "#/components/parameters/RoleId"
      security:
        - BearerAuth: []
      responses:
        204:
          description: Role deleted successfully

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /users-list:
    get:
      tags:
        - Users Data
      summary: Get all registered users
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of registered users
          content:
            application/json:
              example:
                - id: 1
                  uuid: ID-a1b2c3d4-5e6f-7g8h-9i10
                  photo: "https://example.com/profile-photo.png"
                  name: John
                  last_name: Doe
                  username: john_doe
                  email: john@example.com
                  email_verified_at: "2024-01-01T00:00:00Z"
                  phone: "123-456-7890"
                  date_of_birth: 10-01-1990
                  address: "123 Main St"
                  zip_code: "12345"
                  city: "Exampleville"
                  country: "Exampleland"
                  terms_and_conditions: true
                  gender: "Male"
                  latitude: 40.7128
                  longitude: -74.0060
                  created_at: "2024-01-01T00:00:00Z"
                  updated_at: "2024-01-01T00:00:00Z"
                  deleted_at: null
                  user_role: "Role"
                  role_id: 1
                  social_provider: []
                  business: []
                  favorite_businesses:
                    [
                      "9533e911-8edd-41a6-84fc-1187dcab2a8d",
                      "148fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                      "3f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                    ]
                  favorite_menus:
                    [
                      "7533e911-8edd-41a6-84fc-1187dcab2a8d",
                      "248fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                      "5f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                    ]
                  favorite_items:
                    [
                      "6533e911-8edd-41a6-84fc-1187dcab2a8d",
                      "348fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                      "4f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                    ]
                  saved_promotions:
                    [
                      "8533e911-8edd-41a6-84fc-1187dcab2a8d",
                      "448fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                      "2f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                    ]
                  followers:
                    [
                      "9c8b7654-d3e2-4f1a-b9c8-7654d3e2f1a9",
                      "a1b2c3d4-e5f6-4g5h-6i7j-8k9l0m1n2o3p",
                      "b2c3d4e5-f6g7-5h6i-9j0k-l1m2n3o4p5q6",
                    ]
                  followers_length: 3
                  following:
                    [
                      "c3d4e5f6-g7h8-6i7j-0k1l-m2n3o4p5q6r7",
                      "d4e5f6g7-h8i9-7j8k-1l2m-n3o4p5q6r7s8",
                    ]
                  following_length: 2
                - id: 2
                  uuid: ID-a1b2c3d4-5e6f-7g8h-9i10
                  photo: "https://example.com/profile-photo.png"
                  name: John
                  last_name: Doe
                  username: john_doe
                  email: john@example.com
                  email_verified_at: "2024-01-01T00:00:00Z"
                  phone: "123-456-7890"
                  date_of_birth: 10-01-1990
                  addresses:
                    [
                      {
                        id: 1,
                        uuid: "550e8400-e29b-41d4-a716-446655440001",
                        address: "123 Main Street",
                        city: "New York",
                        country: "USA",
                        zip_code: "10001",
                        latitude: 40.7128,
                        longitude: -74.0060,
                        address_label:
                          {
                            id: 1,
                            uuid: "660f9500-f39c-51e5-b827-556766550002",
                            name: "Home",
                            description: "Home address",
                            icon: "home",
                            is_active: true,
                          },
                        principal: true,
                        created_at: "2025-02-25T10:30:00.000000Z",
                        updated_at: "2025-02-25T10:30:00.000000Z",
                      },
                    ]
                  terms_and_conditions: true
                  gender: "Male"

                  created_at: "2024-01-01T00:00:00Z"
                  updated_at: "2024-01-01T00:00:00Z"
                  deleted_at: null
                  user_role: "Role"
                  role_id: 1
                  social_provider: []
                  business: []
                  favorite_businesses:
                    [
                      "9533e911-8edd-41a6-84fc-1187dcab2a8d",
                      "148fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                      "3f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                    ]
                  favorite_menus:
                    [
                      "7533e911-8edd-41a6-84fc-1187dcab2a8d",
                      "248fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                      "5f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                    ]
                  favorite_items:
                    [
                      "6533e911-8edd-41a6-84fc-1187dcab2a8d",
                      "348fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                      "4f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                    ]
                  saved_promotions:
                    [
                      "8533e911-8edd-41a6-84fc-1187dcab2a8d",
                      "448fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                      "2f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                    ]
                  followers:
                    [
                      "9c8b7654-d3e2-4f1a-b9c8-7654d3e2f1a9",
                      "a1b2c3d4-e5f6-4g5h-6i7j-8k9l0m1n2o3p",
                      "b2c3d4e5-f6g7-5h6i-9j0k-l1m2n3o4p5q6",
                    ]
                  followers_length: 3
                  following:
                    [
                      "c3d4e5f6-g7h8-6i7j-0k1l-m2n3o4p5q6r7",
                      "d4e5f6g7-h8i9-7j8k-1l2m-n3o4p5q6r7s8",
                    ]
                  following_length: 2
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /users-create:
    get:
      tags:
        - Users Data
      summary: Get all Users associated with registered permissions.
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components

      responses:
        200:
          description: List of Users with roles associated with registered permissions.
          content:
            application/json:
              example:
                - name: Role 1
                  permissions:
                    - Permission 1
                    - Permission 2
                - name: Role 2
                  permissions:
                    - Permission 2
                    - Permission 3
                - name: Role 3
                  permissions:
                    - Permission 1
                    - Permission 3
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /users-store:
    post:
      tags:
        - Users Data
      summary: Store a new User
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegistration"
        required: true
      responses:
        200:
          description: User created successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /user/{uuid}:
    get:
      tags:
        - Users Data
      summary: Get a user by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/UserId"
      responses:
        200:
          description: User details retrieved successfully
          content:
            application/json:
              example:
                id: 1
                uuid: ID-a1b2c3d4-5e6f-7g8h-9i10
                photo: "https://example.com/profile-photo.png"
                name: John
                last_name: Doe
                username: john_doe
                email: john@example.com
                email_verified_at: "2024-01-01T00:00:00Z"
                phone: "123-456-7890"
                date_of_birth: 10-01-1990
                addresses:
                  [
                    {
                      id: 1,
                      uuid: "550e8400-e29b-41d4-a716-446655440001",
                      address: "123 Main Street",
                      city: "New York",
                      country: "USA",
                      zip_code: "10001",
                      latitude: 40.7128,
                      longitude: -74.0060,
                      address_label:
                        {
                          id: 1,
                          uuid: "660f9500-f39c-51e5-b827-556766550002",
                          name: "Home",
                          description: "Home address",
                          icon: "home",
                          is_active: true,
                        },
                      principal: true,
                      created_at: "2025-02-25T10:30:00.000000Z",
                      updated_at: "2025-02-25T10:30:00.000000Z",
                    },
                  ]
                terms_and_conditions: true
                gender: "Male"

                created_at: "2024-01-01T00:00:00Z"
                updated_at: "2024-01-01T00:00:00Z"
                deleted_at: null
                user_role: "Role"
                role_id: 1
                social_provider: []
                business: []
                favorite_businesses:
                  [
                    "9533e911-8edd-41a6-84fc-1187dcab2a8d",
                    "148fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                    "3f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                  ]
                favorite_menus:
                  [
                    "7533e911-8edd-41a6-84fc-1187dcab2a8d",
                    "248fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                    "5f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                  ]
                favorite_items:
                  [
                    "6533e911-8edd-41a6-84fc-1187dcab2a8d",
                    "348fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                    "4f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                  ]
                saved_promotions:
                  [
                    "8533e911-8edd-41a6-84fc-1187dcab2a8d",
                    "448fb6a0-8a4a-4efa-93c1-39b15f479ea1",
                    "2f7d9b24-c5e2-4f8b-a1d3-892e5d8c6b9a",
                  ]
                followers:
                  [
                    "9c8b7654-d3e2-4f1a-b9c8-7654d3e2f1a9",
                    "a1b2c3d4-e5f6-4g5h-6i7j-8k9l0m1n2o3p",
                    "b2c3d4e5-f6g7-5h6i-9j0k-l1m2n3o4p5q6",
                  ]
                followers_length: 3
                following:
                  [
                    "c3d4e5f6-g7h8-6i7j-0k1l-m2n3o4p5q6r7",
                    "d4e5f6g7-h8i9-7j8k-1l2m-n3o4p5q6r7s8",
                  ]
                following_length: 2
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /users-list/{uuid}/edit:
    get:
      tags:
        - Users Data
      summary: User Profile With Roles and Permissions for editing
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/UserId"
      responses:
        200:
          description: Users roles and permissions for editing
          content:
            application/json:
              example:
                user:
                  id: 1
                  uuid: ID-a1b2c3d4-5e6f-7g8h-9i10
                  photo: "https://example.com/profile-photo.png"
                  name: John
                  last_name: Doe
                  username: john_doe
                  email: john@example.com
                  email_verified_at: "2024-01-01T00:00:00Z"
                  phone: "123-456-7890"
                  date_of_birth: 10-01-1990
                  addresses:
                    [
                      {
                        id: 1,
                        uuid: "550e8400-e29b-41d4-a716-446655440001",
                        address: "123 Main Street",
                        city: "New York",
                        country: "USA",
                        zip_code: "10001",
                        latitude: 40.7128,
                        longitude: -74.0060,
                        address_label:
                          {
                            id: 1,
                            uuid: "660f9500-f39c-51e5-b827-556766550002",
                            name: "Home",
                            description: "Home address",
                            icon: "home",
                            is_active: true,
                          },
                        principal: true,
                        created_at: "2025-02-25T10:30:00.000000Z",
                        updated_at: "2025-02-25T10:30:00.000000Z",
                      },
                    ]
                  terms_and_conditions: true
                  gender: "Male"

                  created_at: "2024-01-01T00:00:00Z"
                  updated_at: "2024-01-01T00:00:00Z"
                  deleted_at: null
                  user_role: "Role"
                  role_id: 1
                  social_provider: []
                  business: []
                roles:
                  Role 1: Role 1
                  Role 2: Role 2
                  Role 3: Role 3
                userRole:
                  Role 1: Role 1
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /users-update/{uuid}:
    put:
      tags:
        - Users Data
      summary: Update a user by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/UserId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUser"
      responses:
        200:
          description: User updated successfully

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /users-delete/{uuid}:
    delete:
      tags:
        - Users Data
      summary: Delete a User by UUID
      parameters:
        - $ref: "#/components/parameters/UserId"
      security:
        - BearerAuth: []
      responses:
        200:
          description: User deleted successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /users-restore/{uuid}:
    put:
      tags:
        - Users Data
      summary: Restore a User by UUID
      parameters:
        - $ref: "#/components/parameters/UserId"
      security:
        - BearerAuth: []
      responses:
        204:
          description: User restored successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /username-available/{username}:
    get:
      tags:
        - Check Username Availability
      summary: Username to verify
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/CheckUsername"
      responses:
        200:
          description: Username Availability
          content:
            application/json:
              example:
                username: available
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /email-available/{email}:
    get:
      tags:
        - Check Email Availability
      summary: Email to verify
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/CheckEmail"
      responses:
        200:
          description: Email Availability
          content:
            application/json:
              example:
                username: Username is available
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /categories:
    get:
      tags:
        - Categories
      summary: Get all Registered Categories
      responses:
        200:
          description: List of Registered Categories
          content:
            application/json:
              example:
                - id: 1
                  category_uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                  category_name: "Cocina Internacional"
                  category_description: "Producto"
                  category_image_path: "https://example.com/icono-cocina.png"
                  user_id: 1
                - id: 2
                  category_uuid: "787ac10b-58cc-4372-a567-0e02b2c3d969"
                  category_name: "Cocina Portuguesa"
                  category_description: "Producto"
                  category_image_path: "https://example.com/icono-cocina.png"
                  user_id: 1
        500:
          $ref: "#/components/responses/ServerError"

  /categories-store:
    post:
      tags:
        - Categories
      summary: Store a new Category
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CategoriesRegistration"
        required: true
      responses:
        200:
          description: Category created successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /categories-update/{uuid}:
    put:
      tags:
        - Categories
      summary: Update a Category by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/CategoryId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCategories"
      responses:
        200:
          description: Category updated successfully

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /categories/{uuid}:
    get:
      tags:
        - Categories
      summary: Get a Category by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/CategoryId"
      responses:
        200:
          description: Category details retrieved successfully
          content:
            application/json:
              example:
                id: 1
                category_uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                category_name: "Cocina Internacional"
                category_description: "Producto"
                category_image_path: "https://example.com/icono-cocina.png"
                user_id: 1
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /categories-update-images/{uuid}:
    post:
      tags:
        - Categories
      summary: Update Category Images
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/CategoryId"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateCategoryImage"
        required: true
      responses:
        200:
          description: Category Image updated successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /categories-delete/{uuid}:
    delete:
      tags:
        - Categories
      summary: Delete a Category by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/CategoryId"
      responses:
        200:
          description: Category successfully removed
          content:
            application/json:
              example:
                id: 1
                category_uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                category_name: "Cocina Internacional"
                category_description: "Producto"
                category_image_path: "https://example.com/icono-cocina.png"
                user_id: 1
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /subcategories:
    get:
      tags:
        - Subcategories
      summary: Get all Registered Subcategories
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of registered subcategories
          content:
            application/json:
              example:
                - id: 1
                  subcategory_uuid: "3f2504e0-4f89-41d3-9a0c-0305e82c3301"
                  subcategory_name: "Vinos"
                  subcategory_description: "Platos deliciosos de todo el mundo"
                  category_id: 1
                - id: 2
                  subcategory_uuid: "123504e0-4f89-41d3-9a0c-0305e82c3301"
                  subcategory_name: "Postres Exquisitos"
                  subcategory_description: "Dulces y postres irresistibles"
                  category_id: 2

        500:
          $ref: "#/components/responses/ServerError"

  /subcategories-store:
    post:
      tags:
        - Subcategories
      summary: Store a new Subcategory
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubcategoriesRegistration"
        required: true
      responses:
        200:
          description: Subcategory created successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /subcategories-update/{uuid}:
    put:
      tags:
        - Subcategories
      summary: Update a Subcategory by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/SubcategoryId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSubcategories"
      responses:
        200:
          description: Subcategory updated successfully

        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /subcategories/{uuid}:
    get:
      tags:
        - Subcategories
      summary: Get a Subcategory by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/SubcategoryId"
      responses:
        200:
          description: Subcategory details retrieved successfully
          content:
            application/json:
              example:
                id: 1
                subcategory_uuid: "3f2504e0-4f89-41d3-9a0c-0305e82c3301"
                subcategory_name: "Vinos"
                subcategory_description: "Producto"
                category_id: 1
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /subcategories-delete/{uuid}:
    delete:
      tags:
        - Subcategories
      summary: Delete a Subcategory by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/SubcategoryId"
      responses:
        200:
          description: Subcategory successfully removed
          content:
            application/json:
              example:
                id: 1
                subcategory_uuid: "3f2504e0-4f89-41d3-9a0c-0305e82c3301"
                subcategory_name: "Vinos"
                subcategory_description: "Producto"
                category_id: 1
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /services:
    get:
      tags:
        - Services
      summary: Get all Registered Services
      responses:
        200:
          description: List of Registered Services
          content:
            application/json:
              example:
                - id: 1
                  service_uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                  service_name: "Wifi"
                  service_description: "Descripción"
                  service_image_path: "https://example.com/icono-wifi.png"
                  user_id: 1
                - id: 2
                  service_uuid: "787ac10b-58cc-4372-a567-0e02b2c3d969"
                  service_name: "Take Away"
                  service_description: "Descripción"
                  service_image_path: "https://example.com/icono-take-away.png"
                  user_id: 1
        500:
          $ref: "#/components/responses/ServerError"

  /services/store:
    post:
      tags:
        - Services
      summary: Store a new Service
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ServicesRegistration"
        required: true
      responses:
        200:
          description: Service created successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /services/{uuid}:
    get:
      tags:
        - Services
      summary: Get a Service by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ServiceId"
      responses:
        200:
          description: Service details retrieved successfully
          content:
            application/json:
              example:
                id: 1
                service_uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                service_name: "Wifi"
                service_description: "Descripción"
                service_image_path: "https://example.com/icono-wifi.png"
                user_id: 1
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /services/update/{uuid}:
    patch:
      tags:
        - Services
      summary: Update a Service by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ServiceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateServices"
      responses:
        200:
          description: Service updated successfully

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /services/update-images/{uuid}:
    post:
      tags:
        - Services
      summary: Update Service Images
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ServiceId"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateServiceImage"
        required: true
      responses:
        200:
          description: Service Image updated successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /services/delete/{uuid}:
    delete:
      tags:
        - Services
      summary: Delete a Service by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ServiceId"
      responses:
        200:
          description: Service successfully removed
          content:
            application/json:
              example:
                id: 1
                category_uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                category_name: "Cocina Internacional"
                category_description: "Producto"
                category_image_path: "https://example.com/icono-cocina.png"
                user_id: 1
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business:
    get:
      tags:
        - Business
      summary: Get all Registered Business
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of registered business
          content:
            application/json:
              example:
                - id: 1
                  business_uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                  business_logo: "https://example.com/business_logo.png"
                  business_name: "Restaurante Internacional"
                  business_email: "info@restauranteinternacional.com"
                  business_phone: "+1 (555) 123-4567"
                  business_address: "Calle Principal, 123"
                  business_zipcode: "12345"
                  business_city: "Ciudad Principal"
                  business_country: "País Principal"
                  business_website: "https://www.restauranteinternacional.com"
                  business_about_us: "Acerca de"
                  business_services:
                    - "Servicio 1"
                    - "Servicio 2"
                  business_additional_info: "Información Adicional"
                  business_latitude: 123.456
                  business_longitude: -78.910
                  business_menus:
                    - "id": 1
                      "uuid": "02b5929e-6a5f-4752-a0f8-fe23f42ce122"
                      "business_uuid": "cc0da207-d14a-4ad8-a0f9-2ed2c3f22e0c"
                  category_id: 1
                  category:
                    id: 1
                    category_uuid: "bdf2abda-0016-4e63-8de5-8ff4542d33bf"
                    category_name: "International Cuisine"
                    category_image_path: "https://foodly.s3.amazonaws.com/public/categories_images/oMAAZvmiXpRoIXhPMUgan7o4m6GS0VngGzuExxF4.jpg"
                  business_opening_hours:
                    - day_0:
                        open_a: "08:00"
                        close_a: "12:00"
                        open_b: "14:00"
                        close_b: "18:00"
                    - day_1:
                        open_a: "08:00"
                        close_a: "12:00"
                        open_b: "14:00"
                        close_b: "18:00"
                    - day_2:
                        open_a: "08:00"
                        close_a: "12:00"
                        open_b: "14:00"
                        close_b: "18:00"
                    - day_3:
                        open_a: "08:00"
                        close_a: "12:00"
                        open_b: "14:00"
                        close_b: "18:00"
                    - day_4:
                        open_a: "08:00"
                        close_a: "12:00"
                        open_b: "14:00"
                        close_b: "18:00"
                    - day_5:
                        open_a: "08:00"
                        close_a: "12:00"
                        open_b: "14:00"
                        close_b: "18:00"
                    - day_6:
                        open_a: "08:00"
                        close_a: "12:00"
                        open_b: "14:00"
                        close_b: "18:00"
                - id: 2
                  business_uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                  business_logo: "https://example.com/business_logo2.png"
                  business_name: "Cafetería del Centro"
                  business_email: "info@cafeteriadelcentro.com"
                  business_phone: "+1 (555) 123-4567"
                  business_address: "Avenida Principal, 456"
                  business_zipcode: "54321"
                  business_city: "Ciudad del Centro"
                  business_country: "País Principal"
                  business_website: "https://www.cafeteriadelcentro.com"
                  business_about_us: "Acerca de"
                  business_services:
                    - "Servicio 1"
                    - "Servicio 2"
                  business_additional_info: "Información Adicional"
                  business_latitude: 12.345
                  business_longitude: -67.890
                  business_menus:
                    - "id": 2
                      "uuid": "02b5929e-6a5f-4752-a0f8-fe23f42ce122"
                      "business_uuid": "cc0da207-d14a-4ad8-a0f9-2ed2c3f22e0c"
                  category_id: 2
                  category:
                    id: 1
                    category_uuid: "bdf2abda-0016-4e63-8de5-8ff4542d33bf"
                    category_name: "International Cuisine"
                    category_image_path: "https://foodly.s3.amazonaws.com/public/categories_images/oMAAZvmiXpRoIXhPMUgan7o4m6GS0VngGzuExxF4.jpg"
                  business_opening_hours:
                    - day_0:
                        open_a: "08:00"
                        close_a: "12:00"
                        open_b: "14:00"
                        close_b: "18:00"
                    - day_1:
                        open_a: "08:00"
                        close_a: "12:00"
                        open_b: "14:00"
                        close_b: "18:00"
                    - day_2:
                        open_a: "08:00"
                        close_a: "12:00"
                        open_b: "14:00"
                        close_b: "18:00"
                    - day_3:
                        open_a: "08:00"
                        close_a: "12:00"
                        open_b: "14:00"
                        close_b: "18:00"
                    - day_4:
                        open_a: "08:00"
                        close_a: "12:00"
                        open_b: "14:00"
                        close_b: "18:00"
                    - day_5:
                        open_a: "08:00"
                        close_a: "12:00"
                        open_b: "14:00"
                        close_b: "18:00"
                    - day_6:
                        open_a: "08:00"
                        close_a: "12:00"
                        open_b: "14:00"
                        close_b: "18:00"
                  business_promotions:
                    - id: 1
                      uuid: "8a256d16-55c0-4e37-a8f4-8db7c1e764d8"
                      sub_title: "¡2x1 en Pizzas Tradicionales!"
                      description: "Llévate dos pizzas tradicionales por el precio de una. Elige entre pepperoni, hawaiana, margherita o vegetariana."
                      start_date: "2024-06-15"
                      expire_date: "2024-08-31"
                      versions:
                        - regular
                        - medium
                        - big
                      prices:
                        regular: 5.99
                        medium: 12
                        big: 15
                      favorites_count: 7
                      available: true
                      business_promo_reference_media:
                        - id: 1
                          uuid: "7c256d16-45c0-4e37-a8f4-8db7c1e764d8"
                          business_promo_item_id: 1
                          business_promo_media_url: "storage/promotion_media_images/image_123456.jpg"
                          media_type: "Image"
                          created_at: "2024-03-15T10:30:00"
                          updated_at: "2024-03-15T10:30:00"

        500:
          $ref: "#/components/responses/ServerError"

  /business-store:
    post:
      tags:
        - Business
      summary: Store a new Business
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/BusinessRegistration"
        required: true
      responses:
        200:
          description: Business created successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /business-update/{uuid}:
    put:
      tags:
        - Business
      summary: Update a Business by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/BusinessId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBusiness"
      responses:
        200:
          description: Business updated successfully

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business/{uuid}:
    get:
      tags:
        - Business
      summary: Get a Business by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/BusinessId"
      responses:
        200:
          description: Business details retrieved successfully
          content:
            application/json:
              example:
                id: 1
                user_id: 1
                business_uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                business_logo: "https://example.com/business_logo.png"
                business_name: "Restaurante Internacional"
                business_email: "info@restauranteinternacional.com"
                business_phone: "+1 (555) 123-4567"
                business_address: "Calle Principal, 123"
                business_zipcode: "12345"
                business_city: "Ciudad Principal"
                business_country: "País Principal"
                business_website: "https://www.restauranteinternacional.com"
                business_about_us: "Acerca de"
                business_services:
                  - "Servicio 1"
                  - "Servicio 2"
                business_additional_info: "Información Adicional"
                business_latitude: 123.456
                business_longitude: -78.910
                business_menus:
                  - "id": 1
                    "uuid": "02b5929e-6a5f-4752-a0f8-fe23f42ce122"
                    "business_uuid": "cc0da207-d14a-4ad8-a0f9-2ed2c3f22e0c"
                category_id: 1
                category:
                  id: 1
                  category_uuid: "bdf2abda-0016-4e63-8de5-8ff4542d33bf"
                  category_name: "International Cuisine"
                  category_image_path: "https://foodly.s3.amazonaws.com/public/categories_images/oMAAZvmiXpRoIXhPMUgan7o4m6GS0VngGzuExxF4.jpg"
                business_opening_hours:
                  - day_0:
                      open_a: "08:00"
                      close_a: "12:00"
                      open_b: "14:00"
                      close_b: "18:00"
                  - day_1:
                      open_a: "08:00"
                      close_a: "12:00"
                      open_b: "14:00"
                      close_b: "18:00"
                  - day_2:
                      open_a: "08:00"
                      close_a: "12:00"
                      open_b: "14:00"
                      close_b: "18:00"
                  - day_3:
                      open_a: "08:00"
                      close_a: "12:00"
                      open_b: "14:00"
                      close_b: "18:00"
                  - day_4:
                      open_a: "08:00"
                      close_a: "12:00"
                      open_b: "14:00"
                      close_b: "18:00"
                  - day_5:
                      open_a: "08:00"
                      close_a: "12:00"
                      open_b: "14:00"
                      close_b: "18:00"
                  - day_6:
                      open_a: "08:00"
                      close_a: "12:00"
                      open_b: "14:00"
                      close_b: "18:00"
                business_promotions:
                  - id: 1
                    uuid: "8a256d16-55c0-4e37-a8f4-8db7c1e764d8"
                    sub_title: "¡2x1 en Pizzas Tradicionales!"
                    description: "Llévate dos pizzas tradicionales por el precio de una. Elige entre pepperoni, hawaiana, margherita o vegetariana."
                    start_date: "2024-06-15"
                    expire_date: "2024-08-31"
                    versions:
                      - regular
                      - medium
                      - big
                    prices:
                      regular: 5.99
                      medium: 12
                      big: 15
                    favorites_count: 7
                    available: true
                    business_promo_reference_media:
                      - id: 1
                        uuid: "7c256d16-45c0-4e37-a8f4-8db7c1e764d8"
                        business_promo_item_id: 1
                        business_promo_media_url: "storage/promotion_media_images/image_123456.jpg"
                        media_type: "Image"
                        created_at: "2024-03-15T10:30:00"
                        updated_at: "2024-03-15T10:30:00"

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-update-logo/{uuid}:
    post:
      tags:
        - Business
      summary: Update Business Logo
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/BusinessId"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateBusinessLogo"
        required: true
      responses:
        200:
          description: Business Logo updated successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /business-delete/{uuid}:
    delete:
      tags:
        - Business
      summary: Delete a Business by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/BusinessId"
      responses:
        200:
          description: Business successfully removed
          content:
            application/json:
              example:
                id: 1
                business_uuid: "3f2504e0-4f89-41d3-9a0c-0305e82c3301"
                business_name: "Cafetería del Centro"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-restore/{uuid}:
    put:
      tags:
        - Business
      summary: Restore a Business by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/BusinessId"
      responses:
        200:
          description: Business successfully restored
          content:
            application/json:
              example:
                id: 1
                user_id: 1
                business_uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                business_logo: "https://example.com/business_logo.png"
                business_name: "Restaurante Internacional"
                business_email: "info@restauranteinternacional.com"
                business_phone: "+1 (555) 123-4567"
                business_address: "Calle Principal, 123"
                business_zipcode: "12345"
                business_city: "Ciudad Principal"
                business_country: "País Principal"
                business_website: "https://www.restauranteinternacional.com"
                business_about_us: "Acerca de"
                business_services:
                  - "Servicio 1"
                  - "Servicio 2"
                business_additional_info: "Información Adicional"
                business_latitude: 123.456
                business_longitude: -78.910
                category_id: 1
                business_opening_hours:
                  - day_0:
                      open_a: "08:00"
                      close_a: "12:00"
                      open_b: "14:00"
                      close_b: "18:00"
                  - day_1:
                      open_a: "08:00"
                      close_a: "12:00"
                      open_b: "14:00"
                      close_b: "18:00"
                  - day_2:
                      open_a: "08:00"
                      close_a: "12:00"
                      open_b: "14:00"
                      close_b: "18:00"
                  - day_3:
                      open_a: "08:00"
                      close_a: "12:00"
                      open_b: "14:00"
                      close_b: "18:00"
                  - day_4:
                      open_a: "08:00"
                      close_a: "12:00"
                      open_b: "14:00"
                      close_b: "18:00"
                  - day_5:
                      open_a: "08:00"
                      close_a: "12:00"
                      open_b: "14:00"
                      close_b: "18:00"
                  - day_6:
                      open_a: "08:00"
                      close_a: "12:00"
                      open_b: "14:00"
                      close_b: "18:00"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business/search:
    post:
      tags:
        - Business Search
      summary: Get all Filtered Location Business
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/LocationSearchSchema"
      responses:
        200:
          description: List Filtered Location Business
          content:
            application/json:
              example:
                business:
                  - id: 1
                    user_id: 3
                    business_uuid: ae300e26-9b6f-4786-bc1a-7a2e1a33224f
                    business_logo: "http://localhost:8080/"
                    business_name: La Dolce Vita Trattoria
                    business_email: dolcevita@example.com
                    business_phone: +351 967845123
                    business_about_us: Auténtica cocina italiana en el corazón de Covilhã
                    business_services:
                      - id: 1
                        service_uuid: 8b9e3e40-0261-4122-b7dd-049abef54f50
                        service_name: Wifi
                      - id: 3
                        service_uuid: 6f285d24-2712-4cf2-880e-3f94a35090e6
                        service_name: Terraza
                      - id: 4
                        service_uuid: 7a285d24-2712-4cf2-880e-3f94a35090e7
                        service_name: Parking
                    business_additional_info: Especialidad en pizzas al horno de leña
                    business_address: Rua do Comercio 45
                    business_zipcode: 6200-161
                    business_city: Covilhã
                    business_country: Portugal
                    business_website: dolcevita-trattoria.pt
                    business_latitude: 40.281562
                    business_longitude: -7.543215
                    business_menus:
                      - id: 5
                        uuid: 5bc3d88e-4386-49a4-9e98-c5630a68a480
                        business_uuid: ae300e26-9b6f-4786-bc1a-7a2e1a33224f
                    category_id: 3
                    category:
                      id: 3
                      category_uuid: d88d9120-6850-4627-84a2-c27ef0e23e67
                      category_name: Pizzerías
                      category_image_path: "https://foodly.s3.amazonaws.com/public/categories_images/zy66xbwjltRgitojWuzbUoOxX4OpLfQUmlotimVi.jpg"
                      subcategories: []
                    business_opening_hours:
                      day_0:
                        open_a: "12:00"
                        close_a: "15:00"
                        open_b: "19:00"
                        close_b: "23:00"
                      day_1:
                        open_a: "12:00"
                        close_a: "15:00"
                        open_b: "19:00"
                        close_b: "23:00"
                      day_2:
                        open_a: "12:00"
                        close_a: "15:00"
                        open_b: "19:00"
                        close_b: "23:00"
                      day_3:
                        open_a: "12:00"
                        close_a: "15:00"
                        open_b: "19:00"
                        close_b: "23:00"
                      day_4:
                        open_a: "12:00"
                        close_a: "15:00"
                        open_b: "19:00"
                        close_b: "23:00"
                      day_5:
                        open_a: "12:00"
                        close_a: "15:00"
                        open_b: "19:00"
                        close_b: "00:00"
                      day_6:
                        open_a: "12:00"
                        close_a: "15:00"
                        open_b: "19:00"
                        close_b: "00:00"
                    created_at: "2025-01-15 14:30:22"
                    updated_at: "2025-01-15 14:30:22"
                    deleted_at: null
                    cover_images:
                      - id: 1
                        business_image_uuid: 9f42eb4b-8c98-4595-ac76-e987ef26b380
                        business_image_path: "https://foodly.s3.amazonaws.com/public/business_photos/rQoKDjOJz9Bzur6o3Rvz65CfEsHeqxJrfYzyynMz.jpg"
                        business_id: 1
                    business_promotions:
                      - id: 1
                        uuid: 804863b3-388d-4814-a35c-7609985f9ae3
                        title: Pizzas 2x1 Tradicionales
                        sub_title: ¡2x1 en Pizzas Tradicionales!
                        description: Llévate dos pizzas tradicionales por el precio de una. Elige entre pepperoni, hawaiana, margherita o vegetariana.
                        start_date: "2024-04-15"
                        expire_date: "2024-04-30"
                        versions:
                          - regular
                          - medium
                          - big
                        prices:
                          regular: 3
                          medium: 4.5
                          big: 6
                        available: true
                        promo_active_days:
                          day_0: false
                          day_1: false
                          day_2: true
                          day_3: false
                          day_4: true
                          day_5: false
                          day_6: false
                        business_promo_reference_media:
                          - id: 1
                            uuid: 353b3094-f108-4c4a-9a4d-68965db6fdf6
                            business_promo_item_id: 1
                            media_type: Image
                            business_promo_media_url: "https://foodly.s3.amazonaws.com/public/promotion_media_images/kKsUc5edCIA6WFAubx1ySdGNexu6cr7PH8mASHsq.jpg"
                            created_at: "2025-05-03T16:16:49.000000Z"
                            updated_at: "2025-05-03T16:16:49.000000Z"
                    business_branches: []
                    favorites_count: 30
                  - id: 6
                    user_id: 4
                    business_uuid: "bf400e26-9b6f-4786-bc1a-7a2e1a33225g"
                    business_logo: "http://localhost:8080/"
                    business_name: "Napoli Express"
                    business_email: "napoliexpress@example.com"
                    business_phone: "+351 967832456"
                    business_about_us: "Pizza napolitana auténtica con ingredientes importados de Italia"
                    business_services:
                      - id: 1
                        service_uuid: "8b9e3e40-0261-4122-b7dd-049abef54f50"
                        service_name: "Wifi"
                      - id: 5
                        service_uuid: "8f285d24-2712-4cf2-880e-3f94a35090e8"
                        service_name: "Delivery"
                      - id: 6
                        service_uuid: "9a285d24-2712-4cf2-880e-3f94a35090e9"
                        service_name: "Take Away"
                    business_additional_info: "Pizzas certificadas por la Asociación Verace Pizza Napoletana"
                    business_address: "Avenida da Universidade 123"
                    business_zipcode: "6200-172"
                    business_city: "Covilhã"
                    business_country: "Portugal"
                    business_website: "napoli-express.pt"
                    business_latitude: 40.279876
                    business_longitude: -7.541234
                    business_menus:
                      - id: 6
                        uuid: "6bc3d88e-4386-49a4-9e98-c5630a68a481"
                        business_uuid: "bf400e26-9b6f-4786-bc1a-7a2e1a33225g"
                    category_id: 3
                    category:
                      id: 3
                      category_uuid: "d88d9120-6850-4627-84a2-c27ef0e23e67"
                      category_name: "Pizzerías"
                      category_image_path: "https://foodly.s3.amazonaws.com/public/categories_images/zy66xbwjltRgitojWuzbUoOxX4OpLfQUmlotimVi.jpg"
                      subcategories: []
                    business_opening_hours:
                      day_0:
                        open_a: "11:00"
                        close_a: "23:00"
                        open_b: null
                        close_b: null
                      day_1:
                        open_a: "11:00"
                        close_a: "23:00"
                        open_b: null
                        close_b: null
                      day_2:
                        open_a: "11:00"
                        close_a: "23:00"
                        open_b: null
                        close_b: null
                      day_3:
                        open_a: "11:00"
                        close_a: "23:00"
                        open_b: null
                        close_b: null
                      day_4:
                        open_a: "11:00"
                        close_a: "23:00"
                        open_b: null
                        close_b: null
                      day_5:
                        open_a: "11:00"
                        close_a: "00:00"
                        open_b: null
                        close_b: null
                      day_6:
                        open_a: "11:00"
                        close_a: "00:00"
                        open_b: null
                        close_b: null
                    created_at: "2025-01-15 16:45:33"
                    updated_at: "2025-01-15 16:45:33"
                    deleted_at: null
                    cover_images:
                      - id: 1
                        business_image_uuid: 9f42eb4b-8c98-4595-ac76-e987ef26b380
                        business_image_path: "https://foodly.s3.amazonaws.com/public/business_photos/rQoKDjOJz9Bzur6o3Rvz65CfEsHeqxJrfYzyynMz.jpg"
                        business_id: 1
                    business_promotions:
                      - id: 1
                        uuid: 804863b3-388d-4814-a35c-7609985f9ae3
                        title: Pizzas 2x1 Tradicionales
                        sub_title: ¡2x1 en Pizzas Tradicionales!
                        description: Llévate dos pizzas tradicionales por el precio de una. Elige entre pepperoni, hawaiana, margherita o vegetariana.
                        start_date: "2024-04-15"
                        expire_date: "2024-04-30"
                        versions:
                          - regular
                          - medium
                          - big
                        prices:
                          regular: 3
                          medium: 4.5
                          big: 6
                        available: true
                        promo_active_days:
                          day_0: false
                          day_1: false
                          day_2: true
                          day_3: false
                          day_4: true
                          day_5: false
                          day_6: false
                        business_promo_reference_media:
                          - id: 1
                            uuid: 353b3094-f108-4c4a-9a4d-68965db6fdf6
                            business_promo_item_id: 1
                            media_type: Image
                            business_promo_media_url: "https://foodly.s3.amazonaws.com/public/promotion_media_images/kKsUc5edCIA6WFAubx1ySdGNexu6cr7PH8mASHsq.jpg"
                            created_at: "2025-05-03T16:16:49.000000Z"
                            updated_at: "2025-05-03T16:16:49.000000Z"
                    favorites_count: 42
                    business_branches: []
        500:
          $ref: "#/components/responses/ServerError"

  /business-cover-images:
    get:
      tags:
        - Business Cover Images
      summary: Get all Registered Business Images
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of registered business images
          content:
            application/json:
              example:
                - id: 1
                  business_image_uuid: "3f2504e0-4f89-41d3-9a0c-0305e82c3301"
                  business_image_path: "https://example.com/business_cover.png"
                  business_id: 1
                - id: 2
                  business_image_uuid: "892504e0-4f89-41d3-9a0c-0305e82c3301"
                  business_image_path: "https://example.com/business_cover2.png"
                  business_id: 2

        500:
          $ref: "#/components/responses/ServerError"

  /business-cover-images-store:
    post:
      tags:
        - Business Cover Images
      summary: Store new Businesses Images
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                business_image_path:
                  type: array
                  items:
                    type: string
                    format: binary
                business_id:
                  type: integer
                  description: ID of the business
              required:
                - business_image_path
                - business_id
      responses:
        200:
          description: Business Images created successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /business-cover-images/{uuid}:
    get:
      tags:
        - Business Cover Images
      summary: Get a Business Image by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/BusinessCoverImagesId"
      responses:
        200:
          description: Business details retrieved successfully
          content:
            application/json:
              example:
                id: 1
                business_image_uuid: "3f2504e0-4f89-41d3-9a0c-0305e82c3301"
                business_image_path: "https://example.com/business_cover.png"
                business_id: 1
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-cover-images-update/{uuid}:
    post:
      tags:
        - Business Cover Images
      summary: Update Business Cover Images
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/BusinessCoverImagesId"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateBusinessCoverImages"
        required: true
      responses:
        200:
          description: Business Image updated successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /business-cover-images-delete/{uuid}:
    delete:
      tags:
        - Business Cover Images
      summary: Delete a Business Cover Image by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/BusinessCoverImagesId"
      responses:
        200:
          description: Business Image successfully removed
          content:
            application/json:
              example:
                id: 1
                business_image_uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                business_image_path: "/path/to/the/example.png"
                business_id: 1
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-menu:
    get:
      tags:
        - Business Menus
      summary: Get all Registered Business Menu
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of registered business menus
          content:
            application/json:
              example:
                - id: 1
                  uuid: d84e7fa6-9171-4ba1-bd2a-3e8322ae4c53
                  bussiness_id: 1
                  business_uuid: "cc0da207-d14a-4ad8-a0f9-2ed2c3f22e0c"
                  business_food_categories:
                    - id: 1
                      uuid: 4f4607a0-94b7-4b91-bb1-721dc64fe83e
                      name: entradas
                      business_menu_id: 1

                      created_at: "2024-08-05 15:22:25"
                      items:
                        - id: 1
                          uuid: 2f71b41a-7c26-4852-abd0-dd13817114c1
                          menu_uuid: d84e7fa6-9171-4ba1-bd2a-3e8322ae4c53
                          business_uuid: "cc0da207-d14a-4ad8-a0f9-2ed2c3f22e0c"
                          business_food_category_id: 1
                          name: Ensalada César
                          description: Ensalada fresca con aderezo César
                          versions:
                            - regular
                            - medium
                            - big
                          prices:
                            regular: 3
                            medium: 4.5
                            big: 6
                          favorites_count: 7
                          available: true
                          business_food_reference_photos:
                            - id: 1
                              uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                              business_food_photo_url: "https://url/business_drink_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                              business_food_item_id: 1
                  business_drink_categories:
                    - id: 1
                      uuid: 4f4607a0-94b7-4b91-bb1-721dc64fe83e
                      name: bebidas
                      business_menu_id: 1
                      business_uuid: "cc0da207-d14a-4ad8-a0f9-2ed2c3f22e0c"
                      created_at: "2024-08-05 15:22:25"
                      items:
                        - id: 1
                          uuid: 2f71b41a-7c26-4852-abd0-dd13817114c1
                          menu_uuid: d84e7fa6-9171-4ba1-bd2a-3e8322ae4c53
                          business_uuid: "cc0da207-d14a-4ad8-a0f9-2ed2c3f22e0c"
                          business_drink_category_id: 1
                          name: Jugo de Naranja
                          description: Jugo de naranja recién exprimido
                          versions:
                            - regular
                            - medium
                            - big
                          prices:
                            regular: 3
                            medium: 4.5
                            big: 6
                          favorites_count: 7
                          available: true
                          business_drink_reference_photos:
                            - id: 1
                              uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                              business_drink_photo_url: "https://url/business_drink_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                              business_drink_item_id: 1
                  business_combos:
                    - id: 1
                      uuid: 2f71b41a-7c26-4852-abd0-dd13817114c1
                      menu_uuid: d84e7fa6-9171-4ba1-bd2a-3e8322ae4c53
                      business_uuid: "cc0da207-d14a-4ad8-a0f9-2ed2c3f22e0c"
                      business_menu_id: 1
                      name: Combo Familiar
                      description: Incluye una pizza grande, una ensalada y un refresco
                      versions:
                        - regular
                        - medium
                        - big
                      prices:
                        regular: 3
                        medium: 4.5
                        big: 6
                      favorites_count: 7
                      available: true
                      business_combos_reference_photos:
                        - id: 1
                          uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                          business_combos_photo_url: "https://url/business_combos_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                          business_combos_id: 1
                  favorites_count: 7

        500:
          $ref: "#/components/responses/ServerError"

  /business-menu/store:
    post:
      tags:
        - Business Menus
      summary: Store a new Business Menu
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessMenuStore"
        required: true
      responses:
        200:
          description: Business Menu created successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /business-menu/{uuid}:
    get:
      tags:
        - Business Menus
      summary: Get a Business Menu by UUID
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Business Menu details retrieved successfully
          content:
            application/json:
              example:
                - id: 1
                  uuid: d84e7fa6-9171-4ba1-bd2a-3e8322ae4c53
                  bussiness_id: 1
                  business_food_categories:
                    - id: 1
                      uuid: 4f4607a0-94b7-4b91-bb1-721dc64fe83e
                      name: entradas
                      business_menu_id: 1
                      business_uuid: "cc0da207-d14a-4ad8-a0f9-2ed2c3f22e0c"
                      created_at: "2024-08-05 15:22:25"
                      items:
                        - id: 1
                          uuid: 2f71b41a-7c26-4852-abd0-dd13817114c1
                          menu_uuid: d84e7fa6-9171-4ba1-bd2a-3e8322ae4c53
                          business_uuid: "cc0da207-d14a-4ad8-a0f9-2ed2c3f22e0c"
                          business_food_category_id: 1
                          name: Ensalada César
                          description: Ensalada fresca con aderezo César
                          versions:
                            - regular
                            - medium
                            - big
                          prices:
                            regular: 3
                            medium: 4.5
                            big: 6
                          favorites_count: 7
                          available: true
                          business_food_reference_photos:
                            - id: 1
                              uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                              business_food_photo_url: "https://url/business_drink_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                              business_food_item_id: 1
                  business_drink_categories:
                    - id: 1
                      uuid: 4f4607a0-94b7-4b91-bb1-721dc64fe83e
                      name: bebidas
                      business_menu_id: 1
                      created_at: "2024-08-05 15:22:25"
                      items:
                        - id: 1
                          uuid: 2f71b41a-7c26-4852-abd0-dd13817114c1
                          menu_uuid: d84e7fa6-9171-4ba1-bd2a-3e8322ae4c53
                          business_uuid: "cc0da207-d14a-4ad8-a0f9-2ed2c3f22e0c"
                          business_drink_category_id: 1
                          name: Jugo de Naranja
                          description: Jugo de naranja recién exprimido
                          versions:
                            - regular
                            - medium
                            - big
                          prices:
                            regular: 3
                            medium: 4.5
                            big: 6
                          favorites_count: 7
                          available: true
                          business_drink_reference_photos:
                            - id: 1
                              uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                              business_drink_photo_url: "https://url/business_drink_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                              business_drink_item_id: 1
                  business_combos:
                    - id: 1
                      uuid: 2f71b41a-7c26-4852-abd0-dd13817114c1
                      menu_uuid: d84e7fa6-9171-4ba1-bd2a-3e8322ae4c53
                      business_uuid: "cc0da207-d14a-4ad8-a0f9-2ed2c3f22e0c"
                      business_menu_id: 1
                      name: Combo Familiar
                      description: Incluye una pizza grande, una ensalada y un refresco
                      versions:
                        - regular
                        - medium
                        - big
                      prices:
                        regular: 3
                        medium: 4.5
                        big: 6
                      favorites_count: 7
                      available: true
                      business_combos_reference_photos:
                        - id: 1
                          uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                          business_combos_photo_url: "https://url/business_combos_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                          business_combos_id: 1
                  favorites_count: 7

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-menu/delete/{uuid}:
    delete:
      tags:
        - Business Menus
      summary: Delete a Business Menu by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Business Menu successfully removed
          content:
            application/json:
              example:
                id: 1
                uuid: "3f2504e0-4f89-41d3-9a0c-0305e82c3301"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-food-categories:
    get:
      tags:
        - Business Food Categories
      summary: Get all Registered Business Food Categories
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of registered business food categories
          content:
            application/json:
              example:
                business_food_categories:
                  - id: 1
                    uuid: 4f4607a0-94b7-4b91-bb1-721dc64fe83e
                    name: entradas
                    business_menu_id: 1
                    created_at: "2024-08-05 15:22:25"
                    items:
                      - id: 1
                        uuid: 2f71b41a-7c26-4852-abd0-dd13817114c1
                        business_food_category_id: 1
                        name: Ensalada César
                        description: Ensalada fresca con aderezo César
                        versions:
                          - regular
                          - medium
                          - big
                        prices:
                          regular: 3
                          medium: 4.5
                          big: 6
                        favorites_count: 7
                        available: true
                        business_food_reference_photos:
                          - id: 1
                            uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                            business_food_photo_url: "https://url/business_food_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                            business_food_item_id: 1

        500:
          $ref: "#/components/responses/ServerError"

  /business-food-categories/store:
    post:
      tags:
        - Business Food Categories
      summary: Store a new Business Food Category
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessFoodCategoryStore"
        required: true
      responses:
        200:
          description: Business Food Category created successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /business-food-categories/{uuid}:
    get:
      tags:
        - Business Food Categories
      summary: Get a Business Food Category by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Business Food Category details retrieved successfully
          content:
            application/json:
              example:
                business_food_categories:
                  - id: 1
                    uuid: 4f4607a0-94b7-4b91-bb1-721dc64fe83e
                    name: entradas
                    business_menu_id: 1
                    created_at: "2024-08-05 15:22:25"
                    items:
                      - id: 1
                        uuid: 2f71b41a-7c26-4852-abd0-dd13817114c1
                        business_food_category_id: 1
                        name: Ensalada César
                        description: Ensalada fresca con aderezo César
                        versions:
                          - regular
                          - medium
                          - big
                        prices:
                          regular: 3
                          medium: 4.5
                          big: 6
                        favorites_count: 7
                        available: true
                        business_food_reference_photos:
                          - id: 1
                            uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                            business_food_photo_url: "https://url/business_food_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                            business_food_item_id: 1

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-food-categories/update/{uuid}:
    patch:
      tags:
        - Business Food Categories
      summary: Update a Business Food Category by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBusinessFoodCategory"
      responses:
        200:
          description: Business Food Category updated successfully

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-food-categories/delete/{uuid}:
    delete:
      tags:
        - Business Food Categories
      summary: Delete a Business Food Category by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Business Food Category successfully removed
          content:
            application/json:
              example:
                id: 1
                uuid: "3f2504e0-4f89-41d3-9a0c-0305e82c3301"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-food-item:
    get:
      tags:
        - Business Food Items
      summary: Get all Registered Business Food Items
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of registered business foods items
          content:
            application/json:
              example:
                items:
                  - id: 1
                    uuid: 2f71b41a-7c26-4852-abd0-dd13817114c1
                    menu_uuid: d84e7fa6-9171-4ba1-bd2a-3e8322ae4c53
                    business_uuid: "cc0da207-d14a-4ad8-a0f9-2ed2c3f22e0c"
                    business_food_category_id: 1
                    name: Ensalada César
                    description: Ensalada fresca con aderezo César
                    versions:
                      - regular
                      - medium
                      - big
                    prices:
                      regular: 3
                      medium: 4.5
                      big: 6
                    favorites_count: 7
                    available: true
                    business_food_reference_photos:
                      - id: 1
                        uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                        business_food_photo_url: "https://url/business_food_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                        business_food_item_id: 1

        500:
          $ref: "#/components/responses/ServerError"

  /business-food-item/store:
    post:
      tags:
        - Business Food Items
      summary: Store a new Business Food Item
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessFoodItemStore"
        required: true
      responses:
        200:
          description: Business Food Item created successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /business-food-item/{uuid}:
    get:
      tags:
        - Business Food Items
      summary: Get a Business Food Item by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Business Food Item details retrieved successfully
          content:
            application/json:
              example:
                - id: 1
                  uuid: 2f71b41a-7c26-4852-abd0-dd13817114c1
                  menu_uuid: d84e7fa6-9171-4ba1-bd2a-3e8322ae4c53
                  business_uuid: "cc0da207-d14a-4ad8-a0f9-2ed2c3f22e0c"
                  business_food_category_id: 1
                  name: Ensalada César
                  description: Ensalada fresca con aderezo César
                  versions:
                    - regular
                    - medium
                    - big
                  prices:
                    regular: 3
                    medium: 4.5
                    big: 6
                  favorites_count: 7
                  available: true
                  business_food_reference_photos:
                    - id: 1
                      uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                      business_food_photo_url: "https://url/business_food_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                      business_food_item_id: 1

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-food-item/update/{uuid}:
    patch:
      tags:
        - Business Food Items
      summary: Update a Business Food Item by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBusinessFoodItem"
      responses:
        200:
          description: Business Food Item updated successfully

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-food-item/delete/{uuid}:
    delete:
      tags:
        - Business Food Items
      summary: Delete a Business Food Item by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Business Food Item successfully removed
          content:
            application/json:
              example:
                id: 1
                uuid: "3f2504e0-4f89-41d3-9a0c-0305e82c3301"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-food-item-photos:
    get:
      tags:
        - Business Food Reference Photos
      summary: Get all Registered Business Food Photos
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of registered business foods photos
          content:
            application/json:
              example:
                items:
                  business_food_reference_photos:
                    - id: 1
                      uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                      business_food_photo_url: "https://url/business_food_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                      business_food_item_id: 1
        500:
          $ref: "#/components/responses/ServerError"

  /business-food-item-photos/store:
    post:
      tags:
        - Business Food Reference Photos
      summary: Store a new Business Food Photo
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/BusinessFoodReferencePhotos"
        required: true
      responses:
        200:
          description: Business Food Photo created successfully
          content:
            application/json:
              example:
                business_food_reference_photos:
                  - id: 1
                    uuid: "1342d1de-8172-492d-854e-e3a86089f141"
                    business_food_photo_url: "https://url/public/business_food_item_photos/kcxBWVllDqwdiUymyfqPFEk2XxWI48yWs8lC7Bc2.jpg"
                    business_food_item_id: 1
                  - id: 2
                    uuid: "2453e2ef-9283-593e-965f-f4b97190f252"
                    business_food_photo_url: "https://url/public/business_food_item_photos/lmzCXWmmErxejVznzgrQGFl3YyXJ59zXt9mD8Cd3.jpg"
                    business_food_item_id: 1

        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /business-food-item-photos/{uuid}:
    get:
      tags:
        - Business Food Reference Photos
      summary: Get a Business Food Reference Photo by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Business Food Photo details retrieved successfully
          content:
            application/json:
              example:
                - id: 1
                  uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                  business_food_photo_url: "https://url/business_food_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                  business_food_item_id: 1

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-food-item-photos/update/{uuid}:
    post:
      tags:
        - Business Food Reference Photos
      summary: Update Business Food Photos
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateBusinessFoodReferencePhotos"
        required: true
      responses:
        200:
          description: Business Food Photo updated successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /business-food-item-photos/delete/{uuid}:
    delete:
      tags:
        - Business Food Reference Photos
      summary: Delete a Business Food Reference Photo by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Business Reference Photo successfully removed
          content:
            application/json:
              example:
                id: 1
                uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-drink-categories:
    get:
      tags:
        - Business Drink Categories
      summary: Get all Registered Business Drink Categories
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of registered business drink categories
          content:
            application/json:
              example:
                business_drink_categories:
                  - id: 1
                    uuid: 4f4607a0-94b7-4b91-bb1-721dc64fe83e
                    name: bebidas
                    business_menu_id: 1
                    created_at: "2024-08-05 15:22:25"
                    items:
                      - id: 1
                        uuid: 2f71b41a-7c26-4852-abd0-dd13817114c1
                        business_drink_category_id: 1
                        name: Jugo de Naranja
                        description: Jugo de naranja recién exprimido
                        versions:
                          - regular
                          - medium
                          - big
                        prices:
                          regular: 3
                          medium: 4.5
                          big: 6
                        favorites_count: 7
                        available: true
                        business_drink_reference_photos:
                          - id: 1
                            uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                            business_drink_photo_url: "https://url/business_drink_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                            business_drink_item_id: 1
        500:
          $ref: "#/components/responses/ServerError"

  /business-drink-categories/store:
    post:
      tags:
        - Business Drink Categories
      summary: Store a new Business Drink Category
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessDrinkCategoryStore"
        required: true
      responses:
        200:
          description: Business Drink Category created successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /business-drink-categories/{uuid}:
    get:
      tags:
        - Business Drink Categories
      summary: Get a Business Drink Category by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Business Drink Category details retrieved successfully
          content:
            application/json:
              example:
                business_drink_categories:
                  - id: 1
                    uuid: 4f4607a0-94b7-4b91-bb1-721dc64fe83e
                    name: entradas
                    business_menu_id: 1
                    created_at: "2024-08-05 15:22:25"
                    items:
                      - id: 1
                        uuid: 2f71b41a-7c26-4852-abd0-dd13817114c1
                        business_drink_category_id: 1
                        name: Jugo de naranja
                        description: Jugo de naranja recién exprimido
                        versions:
                          - regular
                          - medium
                          - big
                        prices:
                          regular: 3
                          medium: 4.5
                          big: 6
                        favorites_count: 7
                        available: true
                        business_drink_reference_photos:
                          - id: 1
                            uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                            business_drink_photo_url: "https://url/business_drink_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                            business_drink_item_id: 1

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-drink-categories/update/{uuid}:
    patch:
      tags:
        - Business Drink Categories
      summary: Update a Business Drink Category by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBusinessDrinkCategory"
      responses:
        200:
          description: Business Drink Category updated successfully

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-drink-categories/delete/{uuid}:
    delete:
      tags:
        - Business Drink Categories
      summary: Delete a Business Drink Category by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Business Drink Category successfully removed
          content:
            application/json:
              example:
                id: 1
                uuid: "3f2504e0-4f89-41d3-9a0c-0305e82c3301"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-drink-item:
    get:
      tags:
        - Business Drink Items
      summary: Get all Registered Business Drink Items
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of registered business drinks items
          content:
            application/json:
              example:
                items:
                  - id: 1
                    uuid: 2f71b41a-7c26-4852-abd0-dd13817114c1
                    menu_uuid: d84e7fa6-9171-4ba1-bd2a-3e8322ae4c53
                    business_uuid: "cc0da207-d14a-4ad8-a0f9-2ed2c3f22e0c"
                    business_drink_category_id: 1
                    name: Jugo de Naranja
                    description: Jugo de naranja recién exprimido
                    versions:
                      - regular
                      - medium
                      - big
                    prices:
                      regular: 3
                      medium: 4.5
                      big: 6
                    favorites_count: 7
                    available: true
                    business_drink_reference_photos:
                      - id: 1
                        uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                        business_drink_photo_url: "https://url/business_drink_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                        business_drink_item_id: 1
        500:
          $ref: "#/components/responses/ServerError"

  /business-drink-item/store:
    post:
      tags:
        - Business Drink Items
      summary: Store a new Business Drink Item
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessDrinkItemStore"
        required: true
      responses:
        200:
          description: Business Drink Item created successfully
          content:
            application/json:
              example:
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /business-drink-item/{uuid}:
    get:
      tags:
        - Business Drink Items
      summary: Get a Business Drink Item by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Business Drink Item details retrieved successfully
          content:
            application/json:
              example:
                uuid: 2f71b41a-7c26-4852-abd0-dd13817114c1
                menu_uuid: d84e7fa6-9171-4ba1-bd2a-3e8322ae4c53
                business_uuid: "cc0da207-d14a-4ad8-a0f9-2ed2c3f22e0c"
                business_drink_category_id: 1
                name: Jugo de Naranja
                description: Jugo de naranja recién exprimido
                versions:
                  - regular
                  - medium
                  - big
                prices:
                  regular: 3
                  medium: 4.5
                  big: 6
                favorites_count: 7
                available: true
                business_drink_reference_photos:
                  - id: 1
                    uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                    business_drink_photo_url: "https://url/business_drink_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                    business_drink_item_id: 1

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-drink-item/update/{uuid}:
    patch:
      tags:
        - Business Drink Items
      summary: Update a Business Drink Item by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBusinessDrinkItem"
      responses:
        200:
          description: Business Food Item updated successfully

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-drink-item/delete/{uuid}:
    delete:
      tags:
        - Business Drink Items
      summary: Delete a Business Drink Item by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Business Food Item successfully removed
          content:
            application/json:
              example:
                id: 1
                uuid: "3f2504e0-4f89-41d3-9a0c-0305e82c3301"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-drink-item-photos:
    get:
      tags:
        - Business Drink Reference Photos
      summary: Get all Registered Business Drink Photos
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of registered business drinks photos
          content:
            application/json:
              example:
                items:
                  business_drink_reference_photos:
                    - id: 1
                      uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                      business_drink_photo_url: "https://url/business_drink_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                      business_drink_item_id: 1
        500:
          $ref: "#/components/responses/ServerError"

  /business-drink-item-photos/store:
    post:
      tags:
        - Business Drink Reference Photos
      summary: Store a new Business Drink Photo
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/BusinessDrinkReferencePhotos"
        required: true
      responses:
        200:
          description: Business Drink Photo Item created successfully
          content:
            application/json:
              example:
                business_drink_reference_photos:
                  - id: 1
                    uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                    business_drink_photo_url: "https://url/business_drink_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                    business_drink_item_id: 1
                  - id: 2
                    uuid: "12121212-6402-4b09-9655-4272812c8080"
                    business_drink_photo_url: "https://url/business_drink_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                    business_drink_item_id: 1
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /business-drink-item-photos/{uuid}:
    get:
      tags:
        - Business Drink Reference Photos
      summary: Get a Business Drink Reference Photo by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Business Drink Photo details retrieved successfully
          content:
            application/json:
              example:
                - id: 1
                  uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                  business_drink_photo_url: "https://url/business_drink_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                  business_drink_item_id: 1

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-drink-item-photos/update/{uuid}:
    post:
      tags:
        - Business Drink Reference Photos
      summary: Update Business Drink Photos
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateBusinessDrinkReferencePhotos"
        required: true
      responses:
        200:
          description: Business Drink Photo updated successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /business-drink-item-photos/delete/{uuid}:
    delete:
      tags:
        - Business Drink Reference Photos
      summary: Delete a Business Drink Reference Photo by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Business Reference Photo successfully removed
          content:
            application/json:
              example:
                id: 1
                uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-combos:
    get:
      tags:
        - Business Combos
      summary: Get all Registered Business Combos
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of registered business combos
          content:
            application/json:
              example:
                business_combos:
                  - id: 1
                    uuid: 2f71b41a-7c26-4852-abd0-dd13817114c1
                    business_menu_id: 1
                    name: Combo Familiar
                    description: Incluye una pizza grande, una ensalada y un refresco
                    versions:
                      - regular
                      - medium
                      - big
                    prices:
                      regular: 3
                      medium: 4.5
                      big: 6
                    favorites_count: 7
                    available: true
                    business_combos_reference_photos:
                      - id: 1
                        uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                        business_combos_photo_url: "https://url/business_combos_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                        business_combos_id: 1

        500:
          $ref: "#/components/responses/ServerError"

  /business-combos/store:
    post:
      tags:
        - Business Combos
      summary: Store a new Business Combo
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessComboStore"
        required: true
      responses:
        200:
          description: Business Combo created successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /business-combos/{uuid}:
    get:
      tags:
        - Business Combos
      summary: Get a Business Combos Item by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Business Drink Item details retrieved successfully
          content:
            application/json:
              example:
                - id: 1
                  uuid: 993a621d-4d93-4df4-8357-4ec94d5c4486
                  business_menu_id: 1
                  name: Combo Familiar
                  description: Incluye una pizza grande, una ensalada y un refresco
                  versions:
                    - regular
                    - medium
                    - big
                  prices:
                  regular: 3
                  medium: 4.5
                  big: 6
                  favorites_count: 7
                  available: true
                  business_combos_reference_photos:
                    - id: 1
                      uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                      business_combos_photo_url: "https://url/business_combo_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                      business_combos_id: 1

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-combos/update/{uuid}:
    patch:
      tags:
        - Business Combos
      summary: Update a Business Combo Item by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBusinessCombo"
      responses:
        200:
          description: Business Combo Item updated successfully

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-combos/delete/{uuid}:
    delete:
      tags:
        - Business Combos
      summary: Delete a Business Combo by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Business Reference Photo successfully removed
          content:
            application/json:
              example:
                id: 1
                uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-combo-photos:
    get:
      tags:
        - Business Combo Photos
      summary: Get all Registered Business Combo Photos
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of registered business combo photos
          content:
            application/json:
              example:
                items:
                  business_combo_photos:
                    - id: 1
                      uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                      business_combos_photo_url: "https://url/business_combo_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                      business_combos_id: 1
        500:
          $ref: "#/components/responses/ServerError"

  /business-combos-photos/store:
    post:
      tags:
        - Business Combo Photos
      summary: Store a new Business Combo Photo
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/BusinessComboPhotos"
        required: true
      responses:
        200:
          description: Business Combo Photo created successfully
          content:
            application/json:
              example:
                business_combo_photos:
                  - id: 1
                    uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                    business_combos_photo_url: "https://url/business_combo_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                    business_combos_id: 1
                  - id: 2
                    uuid: "12121212-6402-4b09-9655-4272812c8080"
                    business_combos_photo_url: "https://url/business_drink_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                    business_combos_id: 1
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /business-combos-photos/{uuid}:
    get:
      tags:
        - Business Combo Photos
      summary: Get a Business Combo Photo by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Business Combo Photo details retrieved successfully
          content:
            application/json:
              example:
                - id: 1
                  uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                  business_combos_photo_url: "https://url/business_drink_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                  business_combos_id: 1

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-combos-photos/update/{uuid}:
    post:
      tags:
        - Business Combo Photos
      summary: Update Business Combo Photos
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateBusinessComboPhotos"
        required: true
      responses:
        200:
          description: Business Combo Photo updated successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /business-combos-photos/delete/{uuid}:
    delete:
      tags:
        - Business Combo Photos
      summary: Delete a Business Drink Reference Photo by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Business Combo Photo successfully removed
          content:
            application/json:
              example:
                id: 1
                uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-favorites:
    get:
      tags:
        - Business Favorites
      summary: Get user's favorite businesses
      security:
        - BearerAuth: []
      responses:
        200:
          description: List of user's favorite businesses
          content:
            application/json:
              example:
                favorite_businesses:
                  - id: 1
                    business_uuid: "9533e911-8edd-41a6-84fc-1187dcab2a8d"
                    business_name: "Mamma Mia"
                    business_logo: "http://localhost:8080/storage/business_logos/logo1.jpg"
                    business_email: "mammamia@example.com"
                    business_phone: "+351 98956556"
                    business_address: "R. Marquês de Ávila e Bolama 6"
                    business_city: "Covilhã"
                    business_country: "Portugal"
                    business_zipcode: "6200-156"
                    business_latitude: 40.280149
                    business_longitude: -7.5419885
                    category:
                      id: 1
                      category_uuid: "bdf2abda-0016-4e63-8de5-8ff4542d33bf"
                      category_name: "International Cuisine"
                      category_image_path: "https://foodly.s3.amazonaws.com/public/categories_images/oMAAZvmiXpRoIXhPMUgan7o4m6GS0VngGzuExxF4.jpg"
                    business_opening_hours:
                      day_0:
                        open_a: "11:00"
                        close_a: "23:00"
                        open_b: null
                        close_b: null
                      day_1:
                        open_a: "11:00"
                        close_a: "23:00"
                        open_b: null
                        close_b: null
                      day_2:
                        open_a: "11:00"
                        close_a: "23:00"
                        open_b: null
                        close_b: null
                      day_3:
                        open_a: "11:00"
                        close_a: "23:00"
                        open_b: null
                        close_b: null
                      day_4:
                        open_a: "11:00"
                        close_a: "23:00"
                        open_b: null
                        close_b: null
                      day_5:
                        open_a: "11:00"
                        close_a: "00:00"
                        open_b: null
                        close_b: null
                      day_6:
                        open_a: "11:00"
                        close_a: "00:00"
                        open_b: null
                        close_b: null
                  - id: 2
                    business_uuid: "148fb6a0-8a4a-4efa-93c1-39b15f479ea1"
                    business_name: "Pizzeria Roma"
                    business_logo: "http://localhost:8080/storage/business_logos/logo2.jpg"
                    business_email: "roma@example.com"
                    business_phone: "+351 98956557"
                    business_address: "Rua Central, 123"
                    business_city: "Lisboa"
                    business_country: "Portugal"
                    business_zipcode: "1000-001"
                    business_latitude: 38.722252
                    business_longitude: -9.139337
                    category:
                      id: 1
                      category_uuid: "bdf2abda-0016-4e63-8de5-8ff4542d33bf"
                      category_name: "International Cuisine"
                      category_image_path: "https://foodly.s3.amazonaws.com/public/categories_images/oMAAZvmiXpRoIXhPMUgan7o4m6GS0VngGzuExxF4.jpg"
                    business_opening_hours:
                      day_0:
                        open_a: "11:00"
                        close_a: "23:00"
                        open_b: null
                        close_b: null
                      day_1:
                        open_a: "11:00"
                        close_a: "23:00"
                        open_b: null
                        close_b: null
                      day_2:
                        open_a: "11:00"
                        close_a: "23:00"
                        open_b: null
                        close_b: null
                      day_3:
                        open_a: "11:00"
                        close_a: "23:00"
                        open_b: null
                        close_b: null
                      day_4:
                        open_a: "11:00"
                        close_a: "23:00"
                        open_b: null
                        close_b: null
                      day_5:
                        open_a: "11:00"
                        close_a: "00:00"
                        open_b: null
                        close_b: null
                      day_6:
                        open_a: "11:00"
                        close_a: "00:00"
                        open_b: null
                        close_b: null
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /business-favorites/{businessUuid}:
    post:
      tags:
        - Business Favorites
      summary: Toggle favorite status for a business
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/BusinessUuid"
      responses:
        200:
          description: Favorite status toggled successfully
          content:
            application/json:
              example:
                is_favorite: true
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-menu-favorites:
    get:
      tags:
        - Business Menu Favorites
      summary: Get user's favorite menus
      security:
        - BearerAuth: []
      responses:
        200:
          description: List of user's favorite menus
          content:
            application/json:
              example:
                favorite_menus:
                  - id: 1
                    uuid: "7533e911-8edd-41a6-84fc-1187dcab2a8d"
                    business_id: 1
                    business_uuid: "9533e911-8edd-41a6-84fc-1187dcab2a8d"
                    business_food_categories:
                      - id: 1
                        name: "Pizzas"
                        food_items: [...]
                    business_drink_categories:
                      - id: 1
                        name: "Soft Drinks"
                        drink_items: [...]
                    business_combos: [...]
                    created_at: "2024-02-18T16:39:34.000000Z"
                    updated_at: "2024-02-18T16:39:34.000000Z"
                    favorites_count: 15

  /business-menu-favorites/{uuid}:
    post:
      tags:
        - Business Menu Favorites
      summary: Toggle favorite status for a business menu
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Favorite status toggled successfully
          content:
            application/json:
              example:
                is_favorite: true
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-food-item-favorites:
    get:
      tags:
        - Business Food Item Favorites
      summary: Get user's favorite food items menus
      security:
        - BearerAuth: []
      responses:
        200:
          description: List of user's favorite food items menus
          content:
            application/json:
              example:
                favorite_foods_items:
                  - id: 1
                    uuid: 2f71b41a-7c26-4852-abd0-dd13817114c1
                    menu_uuid: 7533e911-8edd-41a6-84fc-1187dcab2a8d
                    business_uuid: 9533e911-8edd-41a6-84fc-1187dcab2a8d
                    business_food_category_id: 1
                    name: Ensalada César
                    description: Ensalada fresca con aderezo César
                    versions:
                      - regular
                      - medium
                      - big
                    prices:
                      regular: 3
                      medium: 4.5
                      big: 6
                    favorites_count: 7
                    available: true
                    business_food_reference_photos:
                      - id: 1
                        uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                        business_food_photo_url: "https://url/business_food_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                        business_food_item_id: 1
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /business-food-item-favorites/{uuid}:
    post:
      tags:
        - Business Food Item Favorites
      summary: Toggle favorite status for a food item
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Favorite status toggled successfully
          content:
            application/json:
              example:
                is_favorite: true
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-drink-item-favorites:
    get:
      tags:
        - Business Drink Item Favorites
      summary: Get user's favorite items menus
      security:
        - BearerAuth: []
      responses:
        200:
          description: List of user's favorite drinks items menu
          content:
            application/json:
              example:
                favorite_drinks_items:
                  - id: 1
                    uuid: 2f71b41a-7c26-4852-abd0-dd13817114c1
                    menu_uuid: 7533e911-8edd-41a6-84fc-1187dcab2a8d
                    business_uuid: 9533e911-8edd-41a6-84fc-1187dcab2a8d
                    business_drink_category_id: 1
                    name: Jugo de Naranja
                    description: Jugo de naranja recién exprimido
                    versions:
                      - regular
                      - medium
                      - big
                    prices:
                    regular: 3
                    medium: 4.5
                    big: 6
                    favorites_count: 7
                    available: true
                    business_drink_reference_photos:
                      - id: 1
                        uuid: "8633ed66-6402-4b09-9655-4272863c9774"
                        business_drink_photo_url: "https://url/business_drink_item_photos/NCmmpQEKL2xRs2VgGdozsFu1EyaVnH3h5wowZ35k.jpg"
                        business_drink_item_id: 1
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /business-drink-item-favorites/{uuid}:
    post:
      tags:
        - Business Drink Item Favorites
      summary: Toggle favorite status for a drink item
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Favorite status toggled successfully
          content:
            application/json:
              example:
                is_favorite: true
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /business-combo-favorites:
    get:
      tags:
        - Business Combos Favorites
      summary: Get user's favorite combos
      security:
        - BearerAuth: []
      responses:
        200:
          description: List of user's favorite combos
          content:
            application/json:
              example:
                favorite_combos:
                  - id: 1
                    uuid: "b842c7a3-6d9f-48e1-9c31-e24d58e57fb9"
                    menu_uuid: 7533e911-8edd-41a6-84fc-1187dcab2a8d
                    business_uuid: 9533e911-8edd-41a6-84fc-1187dcab2a8d
                    business_menu_id: 1
                    name: "Super Combo Familiar"
                    description: "Incluye 4 hamburguesas, papas grandes y 4 bebidas"
                    versions:
                      - regular
                      - medium
                      - big
                    prices:
                      regular: 29.99
                      medium: 39.99
                      big: 49.99
                    favorites_count: 12
                    available: true
                    business_combos_reference_photos:
                      - id: 1
                        uuid: "a59e46f1-7287-4a0d-8ab6-d147bf6e0a7d"
                        business_combos_photo_url: "https://url/business_combos_photos/X4tJq3lFOvZ9mWEG8D2bnSyPH6xKaR1c7IpYwUzT.jpg"
                        business_combos_id: 1
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /business-combo-favorites/{uuid}:
    post:
      tags:
        - Business Combos Favorites
      summary: Toggle favorite status for a combo
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Favorite status toggled successfully
          content:
            application/json:
              example:
                is_favorite: true
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /save-promotions:
    get:
      tags:
        - Business Promotions Favorites
      summary: Get user's favorite promotions
      security:
        - BearerAuth: []
      responses:
        200:
          description: List of user's favorite promotions
          content:
            application/json:
              example:
                saved_promotions:
                  - id: 1
                    uuid: "9533e911-8edd-41a6-84fc-1187dcab2a8d"
                    title: "Summer Special"
                    sub_title: "Limited Time Offer"
                    description: "Get 20% off on all items"
                    start_date: "2024-06-01"
                    expire_date: "2024-08-31"
                    versions: ["regular", "medium", "big"]
                    prices:
                      regular: 15.99
                      medium: 20.99
                      big: 25.99
                    promo_active_days:
                      day_0: true
                      day_1: true
                      day_2: true
                      day_3: true
                      day_4: true
                      day_5: true
                      day_6: true
                    available: true
                    media_link: "http://example.com/promotions/summer-special.jpg"
                    favorites_count: 45
                    created_at: "2024-02-18T16:39:34"
                    updated_at: "2024-02-18T16:39:34"
                    business:
                      - id: 1
                        business_uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                        business_name: "Restaurante Internacional"
                        business_logo: "https://example.com/business_logo.png"
                        business_email: "info@restauranteinternacional.com"
                        business_phone: "+1 (555) 123-4567"
                        business_address: "Calle Principal, 123"
                        business_city: "Ciudad Principal"
                        business_zipcode: "12345"
                        business_country: "País Principal"
                        business_latitude: 10.56444
                        business_longitude: 10.56656
                        category:
                          id: 1
                          category_uuid: "bdf2abda-0016-4e63-8de5-8ff4542d33bf"
                          category_name: "International Cuisine"
                          category_image_path: "https://foodly.s3.amazonaws.com/public/categories_images/oMAAZvmiXpRoIXhPMUgan7o4m6GS0VngGzuExxF4.jpg"
                        business_opening_hours:
                          day_0:
                            open_a: "11:00"
                            close_a: "23:00"
                            open_b: null
                            close_b: null
                          day_1:
                            open_a: "11:00"
                            close_a: "23:00"
                            open_b: null
                            close_b: null
                          day_2:
                            open_a: "11:00"
                            close_a: "23:00"
                            open_b: null
                            close_b: null
                          day_3:
                            open_a: "11:00"
                            close_a: "23:00"
                            open_b: null
                            close_b: null
                          day_4:
                            open_a: "11:00"
                            close_a: "23:00"
                            open_b: null
                            close_b: null
                          day_5:
                            open_a: "11:00"
                            close_a: "00:00"
                            open_b: null
                            close_b: null
                          day_6:
                            open_a: "11:00"
                            close_a: "00:00"
                            open_b: null
                            close_b: null
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /save-promotions/{uuid}:
    post:
      tags:
        - Business Promotions Favorites
      summary: Toggle favorite status for a promotion
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Favorite status toggled successfully
          content:
            application/json:
              example:
                is_favorite: true
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /user-followers:
    get:
      tags:
        - Users Followers
      summary: Get authenticated user's followers and following lists
      security:
        - BearerAuth: []
      responses:
        200:
          description: List of followers and following
          content:
            application/json:
              example:
                followers: ["9c8b7654-d3e2-4f1a-b9c8-7654d3e2f1a9"]
                following:
                  [
                    "9c8b7654-d3e2-4f1a-b9c8-7654d3e2f1a9",
                    "b2c3d4e5-f6g7-5h6i-9j0k-l1m2n3o4p5q6",
                  ]
                followers_count: 1
                following_count: 2
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /user-followers/{uuid}:
    post:
      tags:
        - Users Followers
      summary: Toggle follow/unfollow a user
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Follow/unfollow action successful
          content:
            application/json:
              example:
                is_following: true
        400:
          description: Bad Request
          content:
            application/json:
              example:
                message: "You cannot follow yourself"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /branch:
    get:
      tags:
        - Business Branch
      summary: Get all Registered Business Branch
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of registered business branch
          content:
            application/json:
              example:
                - id: 1
                  branch_uuid: d84e7fa6-9171-4ba1-bd2a-3e8322ae4c53
                  branch_logo: "https://example.com/another_branch_logo.png"
                  branch_name: "Cafetería del Pueblo"
                  branch_email: "info@cafeteriadelpueblo.com"
                  branch_phone: "+1 (555) 987-6543"
                  business_address: "Avenida Principal, 456"
                  branch_zipcode: "54321"
                  branch_city: "Ciudad Secundaria"
                  branch_country: "Otro País"
                  branch_website: "https://www.cafeteriadelpueblo.com"
                  branch_about_us: "Acerca de"
                  branch_services:
                    - "Servicio 1"
                    - "Servicio 2"
                  branch_additional_info: "Información Adicional"
                  branch_latitude: 78.910
                  branch_longitude: -12.345

                  bunisess_id: 1
                  business:
                    id: 1
                    business_uuid: "d84e7fa6-9171-4ba1-bd2a-3e8322ae4c53"
                    business_logo: "https://example.com/branch_logo.png"
                    business_name: "Restaurante Italiano Bella Vista"
                    business_email: "info@bellavistaitaliano.com"
                    business_phone: "+1 (555) 123-4567"
                    business_address: "Avenida Principal, 123"
                    business_zipcode: "54321"
                    business_city: "Ciudad Secundaria"
                    business_country: "Otro País"
                    business_website: "https://www.bellavistaitaliano.com"
                    business_latitude: 78.910
                    business_longitude: -12.345
                    category_id: 1
                    user_id: 1
                - id: 2
                  branch_uuid: 75f75413-5bea-4f50-b530-7f500f4cf8f9
                  branch_logo: "https://example.com/branch_logo_alt.png"
                  branch_name: "Bar del Mar"
                  branch_email: "info@bardelmar.com"
                  branch_phone: "+1 (555) 456-7890"
                  business_address: "Plaza Central, 789"
                  branch_zipcode: "67890"
                  branch_city: "Ciudad Costera"
                  branch_country: "Otro País"
                  branch_website: "https://www.bardelmar.com"
                  branch_about_us: "Acerca de"
                  branch_services:
                    - "Servicio 1"
                    - "Servicio 2"
                  branch_additional_info: "Información Adicional"
                  branch_latitude: -12.345
                  branch_longitude: 67.890
                  business_id: 2
                  business:
                    id: 1
                    business_uuid: "75f75413-5bea-4f50-b530-7f500f4cf8f9"
                    business_logo: "https://example.com/another_business_logo.png"
                    business_name: "Café de la Plaza"
                    business_email: "info@cafedelaplaza.com"
                    business_phone: "+1 (555) 987-6543"
                    business_address: "Plaza Central, 456"
                    business_zipcode: "67890"
                    business_city: "Ciudad Costera"
                    business_country: "Otro País"
                    business_website: "https://www.cafedelaplaza.com"
                    business_latitude: -12.345
                    business_longitude: 67.890
                    category_id: 2
                    user_id: 2

        500:
          $ref: "#/components/responses/ServerError"

  /branch-store:
    post:
      tags:
        - Business Branch
      summary: Store a new Business Branch
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/BranchRegistration"
        required: true
      responses:
        200:
          description: Business Branch created successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /branch-update/{uuid}:
    put:
      tags:
        - Business Branch
      summary: Update a Business Branch by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/BranchId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBranch"
      responses:
        200:
          description: Business updated successfully

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /branch/{uuid}:
    get:
      tags:
        - Business Branch
      summary: Get a Business Branch by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/BranchId"
      responses:
        200:
          description: Business Branch details retrieved successfully
          content:
            application/json:
              example:
                - id: 1
                  branch_uuid: d84e7fa6-9171-4ba1-bd2a-3e8322ae4c53
                  branch_logo: "https://example.com/another_business_logo.png"
                  branch_name: "Cafetería del Pueblo"
                  branch_email: "info@cafeteriadelpueblo.com"
                  branch_phone: "+1 (555) 987-6543"
                  business_address: "Avenida Principal, 456"
                  branch_zipcode: "54321"
                  branch_city: "Ciudad Secundaria"
                  branch_country: "Otro País"
                  branch_website: "https://www.cafeteriadelpueblo.com"
                  branch_about_us: "Acerca de"
                  branch_services:
                    - "Servicio 1"
                    - "Servicio 2"
                  branch_additional_info: "Información Adicional"
                  branch_latitude: 78.910
                  branch_longitude: -12.345
                  business_id: 1
                  business:
                    id: 1
                    business_uuid: "d84e7fa6-9171-4ba1-bd2a-3e8322ae4c53"
                    business_logo: "https://example.com/business_logo.png"
                    business_name: "Restaurante Italiano Bella Vista"
                    business_email: "info@bellavistaitaliano.com"
                    business_phone: "+1 (555) 123-4567"
                    business_address: "Avenida Principal, 123"
                    business_zipcode: "54321"
                    business_city: "Ciudad Secundaria"
                    business_country: "Otro País"
                    business_website: "https://www.bellavistaitaliano.com"
                    business_latitude: 78.910
                    business_longitude: -12.345
                    category_id: 1
                    user_id: 1

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /branch-update-logo/{uuid}:
    post:
      tags:
        - Business Branch
      summary: Update Business Branch Logo
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/BranchId"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateBranchLogo"
        required: true
      responses:
        200:
          description: Business Branch Logo updated successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /branch-delete/{uuid}:
    delete:
      tags:
        - Business Branch
      summary: Delete a Business Branch by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/BranchId"
      responses:
        200:
          description: Business Branch successfully removed
          content:
            application/json:
              example:
                id: 1
                branch_uuid: "3f2504e0-4f89-41d3-9a0c-0305e82c3301"
                branch_name: "Cafetería del Centro"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /branch-restore/{uuid}:
    put:
      tags:
        - Business Branch
      summary: Restore a Business Branch by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/BranchId"
      responses:
        200:
          description: Business Branch successfully restored
          content:
            application/json:
              example:
                id: 1
                branch_uuid: "3f2504e0-4f89-41d3-9a0c-0305e82c3301"
                branch_name: "Cafetería del Centro"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /branch-cover-images:
    get:
      tags:
        - Business Branch Cover Images
      summary: Get all Images of Registered Branches
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of registered branches images
          content:
            application/json:
              example:
                - id: 1
                  branch_image_uuid: "3f2504e0-4f89-41d3-9a0c-0305e82c3301"
                  branch_image_path: "https://example.com/branch_cover.png"
                  branch_id: 1
                - id: 2
                  branch_image_uuid: "892504e0-4f89-41d3-9a0c-0305e82c3301"
                  branch_image_path: "https://example.com/branch_cover2.png"
                  branch_id: 2

        500:
          $ref: "#/components/responses/ServerError"

  /branch-cover-images-store:
    post:
      tags:
        - Business Branch Cover Images
      summary: Store new Branches Images
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/BranchCoverImagesRegistration"
        required: true
      responses:
        200:
          description: Branch cover images stored successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /branch-cover-images/{uuid}:
    get:
      tags:
        - Business Branch Cover Images
      summary: Get a Branch Image by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/BranchCoverImagesId"
      responses:
        200:
          description: Branch Image details retrieved successfully
          content:
            application/json:
              example:
                id: 1
                branch_image_uuid: "3f2504e0-4f89-41d3-9a0c-0305e82c3301"
                branch_image_path: "https://example.com/branch_cover.png"
                branch_id: 1
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /branch-cover-images-update/{uuid}:
    post:
      tags:
        - Business Branch Cover Images
      summary: Update Branch Cover Images
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/BranchCoverImagesId"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateBranchCoverImages"
        required: true
      responses:
        200:
          description: Branch Image updated successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /branch-cover-images-delete/{uuid}:
    delete:
      tags:
        - Business Branch Cover Images
      summary: Delete a Branch Cover Image by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/BranchCoverImagesId"
      responses:
        200:
          description: Branch Image successfully removed
          content:
            application/json:
              example:
                id: 1
                branch_image_uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                branch_image_path: "/path/to/the/example.png"
                branch_id: 1
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /promotions:
    get:
      tags:
        - Business Promotions
      summary: Get all Registered Business Promotions
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of Business Promotions
          content:
            application/json:
              example:
                - id: 1
                  uuid: "8a256d16-55c0-4e37-a8f4-8db7c1e764d8"
                  title: "Descuento de verano"
                  sub_title: "Descuento de verano"
                  description: "¡Aprovecha nuestro descuento especial de verano!"
                  start_date: "2024-06-15"
                  expire_date: "2024-08-31"
                  versions:
                    - regular
                    - medium
                    - big
                  prices:
                    regular: 5.99
                    medium: 12
                    big: 15
                  favorites_count: 7
                  available: true
                  promo_active_days:
                    day_0: true
                    day_1: false
                    day_2: true
                    day_3: true
                    day_4: false
                    day_5: true
                    day_6: false
                  media_link: "https://example.com/promotions/summer-discount-2-video.mp4"
                  business:
                    - id: 1
                      business_uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                      business_name: "Restaurante Internacional"
                      business_logo: "https://example.com/business_logo.png"
                      business_email: "info@restauranteinternacional.com"
                      business_phone: "+1 (555) 123-4567"
                      business_address: "Calle Principal, 123"
                      business_city: "Ciudad Principal"
                      business_zipcode: "12345"
                      business_country: "País Principal"
                      business_latitude: 10.56444
                      business_longitude: 10.56656
                      category:
                        id: 1
                        category_uuid: "bdf2abda-0016-4e63-8de5-8ff4542d33bf"
                        category_name: "International Cuisine"
                        category_image_path: "https://foodly.s3.amazonaws.com/public/categories_images/oMAAZvmiXpRoIXhPMUgan7o4m6GS0VngGzuExxF4.jpg"
                      business_opening_hours:
                        day_0:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_1:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_2:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_3:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_4:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_5:
                          open_a: "11:00"
                          close_a: "00:00"
                          open_b: null
                          close_b: null
                        day_6:
                          open_a: "11:00"
                          close_a: "00:00"
                          open_b: null
                          close_b: null
                  business_promo_reference_media:
                    - id: 1
                      uuid: "7c256d16-45c0-4e37-a8f4-8db7c1e764d8"
                      business_promo_item_id: 1
                      business_promo_media_url: "storage/promotion_media_images/image_123456.jpg"
                      media_type: "Image"
                      created_at: "2024-03-15T10:30:00"
                      updated_at: "2024-03-15T10:30:00"
                    - id: 2
                      uuid: "8d367e27-56d1-4f38-b9f5-9ec8c1e765e9"
                      business_promo_item_id: 1
                      business_promo_media_url: "storage/promotion_media_video/video_789012.mp4"
                      media_type: "Video"
                      created_at: "2024-03-15T10:35:00"
                      updated_at: "2024-03-15T10:35:00"
                  created_at: "2024-03-15T10:30:00"
                  updated_at: "2024-03-15T10:30:00"

                - id: 2
                  uuid: "8a256d16-55c0-4e37-a8f4-8db7c1e764d8"
                  title: "Descuento de verano"
                  sub_title: "Descuento de verano"
                  description: "¡Aprovecha nuestro descuento especial de verano!"
                  start_date: "2024-06-15"
                  expire_date: "2024-08-31"
                  versions:
                    - regular
                    - medium
                    - big
                  prices:
                    regular: 5.99
                    medium: 12
                    big: 15
                  favorites_count: 7
                  available: true
                  promo_active_days:
                    day_0: true
                    day_1: false
                    day_2: true
                    day_3: true
                    day_4: false
                    day_5: true
                    day_6: false
                  media_link: "https://example.com/promotions/summer-discount-2-video.mp4"
                  business:
                    - id: 1
                      business_uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                      business_name: "Restaurante Internacional"
                      business_logo: "https://example.com/business_logo.png"
                      business_email: "info@restauranteinternacional.com"
                      business_phone: "+1 (555) 123-4567"
                      business_address: "Calle Principal, 123"
                      business_city: "Ciudad Principal"
                      business_zipcode: "12345"
                      business_country: "País Principal"
                      business_latitude: 10.56444
                      business_longitude: 10.56656
                      category:
                        id: 1
                        category_uuid: "bdf2abda-0016-4e63-8de5-8ff4542d33bf"
                        category_name: "International Cuisine"
                        category_image_path: "https://foodly.s3.amazonaws.com/public/categories_images/oMAAZvmiXpRoIXhPMUgan7o4m6GS0VngGzuExxF4.jpg"
                      business_opening_hours:
                        day_0:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_1:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_2:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_3:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_4:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_5:
                          open_a: "11:00"
                          close_a: "00:00"
                          open_b: null
                          close_b: null
                        day_6:
                          open_a: "11:00"
                          close_a: "00:00"
                          open_b: null
                          close_b: null
                  business_promo_reference_media:
                    - id: 1
                      uuid: "7c256d16-45c0-4e37-a8f4-8db7c1e764d8"
                      business_promo_item_id: 1
                      business_promo_media_url: "storage/promotion_media_images/image_123456.jpg"
                      media_type: "Image"
                      created_at: "2024-03-15T10:30:00"
                      updated_at: "2024-03-15T10:30:00"
                    - id: 2
                      uuid: "8d367e27-56d1-4f38-b9f5-9ec8c1e765e9"
                      business_promo_item_id: 1
                      business_promo_media_url: "storage/promotion_media_video/video_789012.mp4"
                      media_type: "Video"
                      created_at: "2024-03-15T10:35:00"
                      updated_at: "2024-03-15T10:35:00"
                  created_at: "2024-03-15T10:30:00"
                  updated_at: "2024-03-15T10:30:00"

        500:
          $ref: "#/components/responses/ServerError"

  /promotions/store:
    post:
      tags:
        - Business Promotions
      summary: Store a new Business Promotion
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromotionsRegistration"
        required: true
      responses:
        200:
          description: Promotion created successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /promotions/{uuid}:
    get:
      tags:
        - Business Promotions
      summary: Get a Business Promotion by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Promotion details retrieved successfully
          content:
            application/json:
              example:
                - id: 1
                  uuid: "8a256d16-55c0-4e37-a8f4-8db7c1e764d8"
                  title: "Descuento de verano"
                  sub_title: "Descuento de verano"
                  description: "¡Aprovecha nuestro descuento especial de verano!"
                  start_date: "2024-06-15"
                  expire_date: "2024-08-31"
                  versions:
                    - regular
                    - medium
                    - big
                  prices:
                    regular: 5.99
                    medium: 12
                    big: 15
                  favorites_count: 7
                  available: true
                  promo_active_days:
                    day_0: true
                    day_1: false
                    day_2: true
                    day_3: true
                    day_4: false
                    day_5: true
                    day_6: false
                  business:
                    - id: 1
                      business_uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                      business_name: "Restaurante Internacional"
                      business_logo: "https://example.com/business_logo.png"
                      business_email: "info@restauranteinternacional.com"
                      business_phone: "+1 (555) 123-4567"
                      business_address: "Calle Principal, 123"
                      business_city: "Ciudad Principal"
                      business_zipcode: "12345"
                      business_country: "País Principal"
                      business_latitude: 10.56444
                      business_longitude: 10.56656
                      category:
                        id: 1
                        category_uuid: "bdf2abda-0016-4e63-8de5-8ff4542d33bf"
                        category_name: "International Cuisine"
                        category_image_path: "https://foodly.s3.amazonaws.com/public/categories_images/oMAAZvmiXpRoIXhPMUgan7o4m6GS0VngGzuExxF4.jpg"
                      business_opening_hours:
                        day_0:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_1:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_2:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_3:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_4:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_5:
                          open_a: "11:00"
                          close_a: "00:00"
                          open_b: null
                          close_b: null
                        day_6:
                          open_a: "11:00"
                          close_a: "00:00"
                          open_b: null
                          close_b: null
                  media_link: "https://example.com/promotions/summer-discount-2-video.mp4"
                  business_promo_reference_media:
                    - id: 1
                      uuid: "7c256d16-45c0-4e37-a8f4-8db7c1e764d8"
                      business_promo_item_id: 1
                      business_promo_media_url: "storage/promotion_media_images/image_123456.jpg"
                      media_type: "Image"
                      created_at: "2024-03-15T10:30:00"
                      updated_at: "2024-03-15T10:30:00"
                    - id: 2
                      uuid: "8d367e27-56d1-4f38-b9f5-9ec8c1e765e9"
                      business_promo_item_id: 1
                      business_promo_media_url: "storage/promotion_media_video/video_789012.mp4"
                      media_type: "Video"
                      created_at: "2024-03-15T10:35:00"
                      updated_at: "2024-03-15T10:35:00"
                  created_at: "2024-03-15T10:30:00"
                  updated_at: "2024-03-15T10:30:00"

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /promotions/update/{uuid}:
    patch:
      tags:
        - Business Promotions
      summary: Update a Promotion by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePromotions"
      responses:
        200:
          description: Promotion updated successfully

        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /promotions/delete/{uuid}:
    delete:
      tags:
        - Business Promotions
      summary: Delete a Promotion by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Promotion successfully removed

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /promotions/restore/{uuid}:
    put:
      tags:
        - Business Promotions
      summary: Restore a Promotion by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Promotion successfully restored
          content:
            application/json:
              example:
                - id: 1
                  uuid: "8a256d16-55c0-4e37-a8f4-8db7c1e764d8"
                  title: "Descuento de verano"
                  sub_title: "Descuento de verano"
                  description: "¡Aprovecha nuestro descuento especial de verano!"
                  start_date: "2024-06-15"
                  expire_date: "2024-08-31"
                  versions:
                    - regular
                    - medium
                    - big
                  prices:
                    regular: 5.99
                    medium: 12
                    big: 15
                  favorites_count: 7
                  available: true
                  business_promo_reference_media:
                    - id: 1
                      uuid: "7c256d16-45c0-4e37-a8f4-8db7c1e764d8"
                      business_promo_item_id: 1
                      business_promo_media_url: "storage/promotion_media_images/image_123456.jpg"
                      media_type: "Image"
                      created_at: "2024-03-15T10:30:00"
                      updated_at: "2024-03-15T10:30:00"
                    - id: 2
                      uuid: "8d367e27-56d1-4f38-b9f5-9ec8c1e765e9"
                      business_promo_item_id: 1
                      business_promo_media_url: "storage/promotion_media_video/video_789012.mp4"
                      media_type: "Video"
                      created_at: "2024-03-15T10:35:00"
                      updated_at: "2024-03-15T10:35:00"
                  promo_active_days:
                    day_0: true
                    day_1: false
                    day_2: true
                    day_3: true
                    day_4: false
                    day_5: true
                    day_6: false
                  business_id: 1
                  business:
                    - id: 1
                      business_uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                      business_logo: "https://example.com/business_logo.png"
                      business_name: "Restaurante Internacional"
                      business_email: "info@restauranteinternacional.com"
                      business_phone: "+1 (555) 123-4567"
                      business_address: "Calle Principal, 123"
                      business_zipcode: "12345"
                      business_city: "Ciudad Principal"
                      business_country: "País Principal"
                      business_latitude: 10.56444
                      business_longitude: 10.56656
                      business_website: "https://www.restauranteinternacional.com"
                      business_about_us: "Acerca de"
                      category:
                        id: 1
                        category_uuid: "bdf2abda-0016-4e63-8de5-8ff4542d33bf"
                        category_name: "International Cuisine"
                        category_image_path: "https://foodly.s3.amazonaws.com/public/categories_images/oMAAZvmiXpRoIXhPMUgan7o4m6GS0VngGzuExxF4.jpg"
                      business_opening_hours:
                        day_0:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_1:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_2:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_3:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_4:
                          open_a: "11:00"
                          close_a: "23:00"
                          open_b: null
                          close_b: null
                        day_5:
                          open_a: "11:00"
                          close_a: "00:00"
                          open_b: null
                          close_b: null
                        day_6:
                          open_a: "11:00"
                          close_a: "00:00"
                          open_b: null
                          close_b: null
                  created_at: "2024-03-15T10:30:00"
                  updated_at: "2024-03-15T10:30:00"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /promotions-media:
    get:
      tags:
        - Business Promotions Media
      summary: Get all Media of Registered Business Promotions
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of registered business promotion media
          content:
            application/json:
              example:
                - id: 1
                  uuid: "7c256d16-45c0-4e37-a8f4-8db7c1e764d8"
                  business_promo_media_url: "storage/promotion_media_images/image_123456.jpg"
                  media_type: "Image"
                  business_promo_item_id: 1
                  created_at: "2024-03-15T10:30:00"
                  updated_at: "2024-03-15T10:30:00"
                - id: 2
                  uuid: "8d367e27-56d1-4f38-b9f5-9ec8c1e765e9"
                  business_promo_media_url: "storage/promotion_media_video/video_789012.mp4"
                  media_type: "Video"
                  business_promo_item_id: 1
                  created_at: "2024-03-15T10:35:00"
                  updated_at: "2024-03-15T10:35:00"

        500:
          $ref: "#/components/responses/ServerError"

  /promotions-media/store:
    post:
      tags:
        - Business Promotions Media
      summary: Store new Business Promotion Media
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/BusinessPromotionMediaRegistration"
        required: true
      responses:
        200:
          description: Business Prmotion Media stored successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /promotions-media/{uuid}:
    get:
      tags:
        - Business Promotions Media
      summary: Get a Prmotion Media by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Promotion Media details retrieved successfully
          content:
            application/json:
              example:
                - id: 1
                  uuid: "7c256d16-45c0-4e37-a8f4-8db7c1e764d8"
                  business_promo_media_url: "storage/promotion_media_images/image_123456.jpg"
                  media_type: "Image"
                  business_promo_item_id: 1
                  created_at: "2024-03-15T10:30:00"
                  updated_at: "2024-03-15T10:30:00"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /promotions-media/update/{uuid}:
    post:
      tags:
        - Business Promotions Media
      summary: Update Business Promotion Media
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdatePromotionMedia"
        required: true
      responses:
        200:
          description: Promotion Media updated successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /promotions-media/delete/{uuid}:
    delete:
      tags:
        - Business Promotions Media
      summary: Delete a Promotion Media by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Promotion Image successfully removed
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /branch-promotions:
    get:
      tags:
        - Branch Promotions
      summary: Get all Registered Branch Promotions
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of Branch Promotions
          content:
            application/json:
              example:
                - id: 1
                  promotion_branch_uuid: "8a256d16-55c0-4e37-a8f4-8db7c1e764d8"
                  promotion_branch_title: "Descuento de verano"
                  promotion_branch_description: "¡Aprovecha nuestro descuento especial de verano!"
                  promotion_branch_start_date: "2024-06-15"
                  promotion_branch_end_date: "2024-08-31"
                  promotion_branch_type: "Descuento"
                  promotion_branch_status: "Active"
                  branch_id: 1

                - id: 2
                  promotion_branch_uuid: "4f8329b8-3e43-4f20-9752-fb4d77f5f533"
                  promotion_branch_title: "Oferta especial de fin de semana"
                  promotion_branch_description: "¡Aprovecha nuestra oferta especial de fin de semana y obtén un 20% de descuento en todos los productos!"
                  promotion_branch_start_date: "2024-07-20"
                  promotion_branch_end_date: "2024-07-22"
                  promotion_branch_type: "Oferta Especial"
                  promotion_branch_status: "Active"
                  branch_id: 2

        500:
          $ref: "#/components/responses/ServerError"

  /branch-promotions-store:
    post:
      tags:
        - Branch Promotions
      summary: Store a new Branch Promotion
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BranchPromotionsRegistration"
        required: true
      responses:
        200:
          description: Promotion created successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /branch-promotions/{uuid}:
    get:
      tags:
        - Branch Promotions
      summary: Get a Branch Promotion by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Branch Promotion details retrieved successfully
          content:
            application/json:
              example:
                - id: 1
                  promotion_branch_uuid: "8a256d16-55c0-4e37-a8f4-8db7c1e764d8"
                  promotion_branch_title: "Descuento de verano"
                  promotion_branch_description: "¡Aprovecha nuestro descuento especial de verano!"
                  promotion_branch_start_date: "2024-06-15"
                  promotion_branch_end_date: "2024-08-31"
                  promotion_branch_type: "Descuento"
                  promotion_branch_status: "Active"
                  branch_id: 1

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /branch-promotions-update/{uuid}:
    put:
      tags:
        - Branch Promotions
      summary: Update a Branch Promotion by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBranchPromotions"
      responses:
        200:
          description: Subcategory updated successfully

        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /branch-promotions-delete/{uuid}:
    delete:
      tags:
        - Branch Promotions
      summary: Delete a Branch by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Branch successfully removed

        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /branch-promotions-restore/{uuid}:
    put:
      tags:
        - Branch Promotions
      summary: Restore a Branch by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Branch successfully restored
          content:
            application/json:
              example:
                - id: 1
                  promotion_branch_uuid: "8a256d16-55c0-4e37-a8f4-8db7c1e764d8"
                  promotion_branch_title: "Descuento de verano"
                  promotion_branch_description: "¡Aprovecha nuestro descuento especial de verano!"
                  promotion_branch_start_date: "2024-06-15"
                  promotion_branch_end_date: "2024-08-31"
                  promotion_branch_type: "Descuento"
                  promotion_branch_status: "Active"
                  branch_id: 1
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /branch-promotions-images:
    get:
      tags:
        - Branch Promotions Images
      summary: Get all Images of Registered Branch Promotions
      security:
        - BearerAuth: [] # Use the security scheme name defined in your components
      responses:
        200:
          description: List of registered branch promotions images
          content:
            application/json:
              example:
                - id: 1
                  promotion_branch_image_uuid: "3f2504e0-4f89-41d3-9a0c-0305e82c3301"
                  promotion_branch_image_path: "https://example.com/promotion_branch.png"
                  promotion_branch_id: "1"
                - id: 2
                  promotion_branch_image_uuid: "892504e0-4f89-41d3-9a0c-0305e82c3301"
                  promotion_branch_image_path: "https://example.com/promotion_branch2.png"
                  promotion_branch_id: 2

        500:
          $ref: "#/components/responses/ServerError"

  /branch-promotions-images-store:
    post:
      tags:
        - Branch Promotions Images
      summary: Store new Branch Promotion Images
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/BranchPromotionImagesRegistration"
        required: true
      responses:
        200:
          description: Branch Promotion images stored successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /branch-promotions-images/{uuid}:
    get:
      tags:
        - Branch Promotions Images
      summary: Get a Branch Promotion Image by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Promotion Branch Image details retrieved successfully
          content:
            application/json:
              example:
                id: 1
                branch_branch_image_uuid: "3f2504e0-4f89-41d3-9a0c-0305e82c3301"
                promotion_branch_image_path: "https://example.com/promotion_branch_cover.png"
                promotion_branch_id: 1
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /branch-promotions-images-update/{uuid}:
    post:
      tags:
        - Branch Promotions Images
      summary: Update Business Promotion Images
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateBranchPromotionImages"
        required: true
      responses:
        200:
          description: Branch Promotion Image updated successfully
        401:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /branch-promotions-images-delete/{uuid}:
    delete:
      tags:
        - Branch Promotions Images
      summary: Delete a Branch Promotion Image by UUID
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        200:
          description: Branch Promotion Image successfully removed
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /social-login:
    post:
      tags:
        - SocialAuth
      summary: Social Networks Authentication Callback
      requestBody:
        content:
          application/json:
            example:
              provider: google
              access_provider_token: "your_google_access_token_here"
            schema:
              $ref: "#/components/schemas/SocialLoginRegistration"
        required: true

      responses:
        200:
          description: Redirect to frontend or dashboard after successful authentication
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/ServerError"

  /user-addresses:
    get:
      tags:
        - User Addresses
      summary: Get all user addresses
      description: Retrieve all addresses for the authenticated user, ordered by principal first
      security:
        - BearerAuth: []
      responses:
        200:
          description: List of user addresses retrieved successfully
          content:
            application/json:
              example:
                addresses:
                  - id: 1
                    uuid: "550e8400-e29b-41d4-a716-446655440001"
                    address: "123 Main St"
                    city: "New York"
                    country: "USA"
                    zip_code: "10001"
                    latitude: 40.7128
                    longitude: -74.0060
                    address_label_id: 1
                    address_label:
                      id: 1
                      uuid: "550e8400-e29b-41d4-a716-446655440002"
                      name: "Home"
                      description: "Primary residence"
                      icon: "home"
                    principal: true
                    created_at: "2025-02-25T10:30:00.000000Z"
                    updated_at: "2025-02-25T10:30:00.000000Z"
        401:
          $ref: "#/components/responses/Unauthorized"

  /user-addresses/store:
    post:
      tags:
        - User Addresses
      summary: Create a new user address
      description: Create a new address for the authenticated user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAddressStore"
            example:
              address: "456 Oak Avenue"
              city: "Los Angeles"
              country: "USA"
              zip_code: "90210"
              latitude: 34.0522
              longitude: -118.2437
              address_label_id: 2
              principal: false
      responses:
        200:
          description: Address created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAddressResponse"
        409:
          description: User already has an address with this label
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        401:
          $ref: "#/components/responses/Unauthorized"

  /user-addresses/{uuid}:
    get:
      tags:
        - User Addresses
      summary: Get specific user address
      description: Retrieve a specific address by UUID for the authenticated user
      security:
        - BearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the address to retrieve
      responses:
        200:
          description: Address retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAddressResponse"
        404:
          description: Address not found
        401:
          $ref: "#/components/responses/Unauthorized"

  /user-addresses/update/{uuid}:
    patch:
      tags:
        - User Addresses
      summary: Update user address
      description: Update an existing address for the authenticated user
      security:
        - BearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the address to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAddressUpdate"
            example:
              address: "456 Updated Street"
              city: "Updated City"
              country: "USA"
              zip_code: "12345"
              latitude: 41.8781
              longitude: -87.6298
              address_label_id: 3
              principal: false
      responses:
        200:
          description: Address updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAddressResponse"
        404:
          description: Address not found
        409:
          description: User already has an address with this label
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        401:
          $ref: "#/components/responses/Unauthorized"

  /user-addresses/delete/{uuid}:
    delete:
      tags:
        - User Addresses
      summary: Delete user address
      description: Delete an address for the authenticated user
      security:
        - BearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the address to delete
      responses:
        200:
          description: Address deleted successfully
          content:
            application/json:
              example:
                message: "Address deleted successfully"
        404:
          description: Address not found
        401:
          $ref: "#/components/responses/Unauthorized"

  /user-addresses/set-principal/{uuid}:
    patch:
      tags:
        - User Addresses
      summary: Set address as principal
      description: Mark an address as the principal address for the authenticated user
      security:
        - BearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the address to set as principal
      responses:
        200:
          description: Principal address updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAddressResponse"
        404:
          description: Address not found
        401:
          $ref: "#/components/responses/Unauthorized"

  /address-labels:
    get:
      tags:
        - Address Labels
      summary: Get all active address labels
      description: Retrieve all active address labels available for categorizing addresses
      responses:
        200:
          description: Address labels retrieved successfully
          content:
            application/json:
              example:
                labels:
                  - id: 1
                    uuid: "550e8400-e29b-41d4-a716-446655440001"
                    name: "Home"
                    description: "Primary residence address"
                    icon: "home"
                    is_active: true
                    created_at: "2025-02-25T10:30:00.000000Z"
                    updated_at: "2025-02-25T10:30:00.000000Z"
                  - id: 2
                    uuid: "550e8400-e29b-41d4-a716-446655440002"
                    name: "Work"
                    description: "Office or workplace address"
                    icon: "briefcase"
                    is_active: true
                    created_at: "2025-02-25T10:35:00.000000Z"
                    updated_at: "2025-02-25T10:35:00.000000Z"
        401:
          $ref: "#/components/responses/Unauthorized"

  /address-labels/store:
    post:
      tags:
        - Address Labels
      summary: Create a new address label (Super Admin only)
      description: Create a new address label for categorizing user addresses
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddressLabelStore"
            example:
              name: "Emergency"
              description: "Emergency contact address"
              icon: "alert-circle"
              is_active: true
      responses:
        200:
          description: Address label created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressLabelResponse"
        422:
          description: Validation failed (e.g., duplicate name)
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          description: Forbidden - Super Admin required

  /address-labels/{uuid}:
    get:
      tags:
        - Address Labels
      summary: Get specific address label (Super Admin only)
      description: Retrieve a specific address label by UUID
      security:
        - BearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the address label to retrieve
      responses:
        200:
          description: Address label retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressLabelResponse"
        404:
          description: Address label not found
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          description: Forbidden - Super Admin required

  /address-labels/update/{uuid}:
    patch:
      tags:
        - Address Labels
      summary: Update address label (Super Admin only)
      description: Update an existing address label
      security:
        - BearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the address label to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddressLabelUpdate"
            example:
              name: "Office"
              description: "Updated workplace address description"
              icon: "building"
              is_active: true
      responses:
        200:
          description: Address label updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressLabelResponse"
        404:
          description: Address label not found
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          description: Forbidden - Super Admin required

  /address-labels/delete/{uuid}:
    delete:
      tags:
        - Address Labels
      summary: Delete address label (Super Admin only)
      description: Delete an address label if not in use by any addresses
      security:
        - BearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the address label to delete
      responses:
        200:
          description: Address label deleted successfully
          content:
            application/json:
              example:
                message: "Address label deleted successfully"
        404:
          description: Address label not found
        409:
          description: Cannot delete label - in use by addresses
          content:
            application/json:
              example:
                message: "Cannot delete label. It is being used by 3 address(es)."
                addresses_count: 3
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          description: Forbidden - Super Admin required

  /address-labels/toggle-active/{uuid}:
    patch:
      tags:
        - Address Labels
      summary: Toggle address label active status (Super Admin only)
      description: Toggle the active status of an address label
      security:
        - BearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the address label to toggle
      responses:
        200:
          description: Address label status updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressLabelResponse"
        404:
          description: Address label not found
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          description: Forbidden - Super Admin required

components:
  responses:
    Unauthorized:
      description: (Unauthorized) No authorization to call the service
    NotFound:
      description: (NotFound) No information found
    BadRequest:
      description: (Bad Request) The data sent is incorrect
    Forbidden:
      description: Unauthorized
    UnprocessableEntity:
      description: (Unprocessable Entity) Validation failed
    ServerError:
      description: Server error
    TooManyRequests:
      description: (Too Many Requests) The client has sent too many requests in a given amount of time

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    PermissionId:
      name: id
      in: path
      description: ID of the permission to retrieve
      required: true
      schema:
        type: integer
    RoleId:
      name: id
      in: path
      description: ID of the role to retrieve
      required: true
      schema:
        type: integer
    UserId:
      name: uuid
      in: path
      description: ID of the user to retrieve
      required: true
      schema:
        type: string
        format: uuid
    CategoryId:
      name: uuid
      in: path
      description: UUID of the category to retrieve
      required: true
      schema:
        type: string
        format: uuid
    ServiceId:
      name: uuid
      in: path
      description: UUID of the service to retrieve
      required: true
      schema:
        type: string
        format: uuid
    SubcategoryId:
      name: uuid
      in: path
      description: UUID of the subcategory to retrieve
      required: true
      schema:
        type: string
        format: uuid
    BusinessId:
      name: uuid
      in: path
      description: UUID of the business to retrieve
      required: true
      schema:
        type: string
        format: uuid
    BusinessUuid:
      name: businessUuid
      in: path
      description: UUID of the business to retrieve
      required: true
      schema:
        type: string
        format: uuid
    BusinessCoverImagesId:
      name: uuid
      in: path
      description: UUID of the business images to retrieve
      required: true
      schema:
        type: string
        format: uuid
    BranchId:
      name: uuid
      in: path
      description: UUID of the business branch to retrieve
      required: true
      schema:
        type: string
        format: uuid
    BranchCoverImagesId:
      name: uuid
      in: path
      description: UUID of the branch images to retrieve
      required: true
      schema:
        type: string
        format: uuid

    resourceId:
      name: uuid
      in: path
      description: UUID of the data to retrieve
      required: true
      schema:
        type: string
        format: uuid
    CheckUsername:
      name: username
      in: path
      description: Username to verify
      required: true
      schema:
        type: string

    CheckEmail:
      name: email
      in: path
      description: Email to verify
      required: true
      schema:
        type: string

  schemas:
    UserRegistration:
      type: object
      properties:
        photo:
          type: string
          description: Photo of the user
          format: binary
        name:
          type: string
          description: Name of the user
        last_name:
          type: string
          description: Last name of the user
        username:
          type: string
          description: Username of the user
        date_of_birth:
          type: string
          description: Date of birth of the user
        email:
          type: string
          format: email
          description: Email of the user
        password:
          type: string
          description: Password of the user
        phone:
          type: string
          description: Phone number of the user
        address:
          type: string
          description: Address of the user
        zip_code:
          type: string
          description: Zip Code of the user
        city:
          type: string
          description: City of the user
        country:
          type: string
          description: Country of the user
        gender:
          type: string
          description: Gender of the user
        terms_and_conditions:
          type: boolean
          description: Acceptance of terms and conditions
          default: false
        role_id:
          type: integer
          description: Role ID of the user
        provider:
          type: string
          description: Name of the Social Provider
        provider_id:
          type: string
          description: Provider Id of the Social Provider
        provider_avatar:
          type: string
          description: User avatar of the Social Provider

    UserLogin:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Email of the user
        password:
          type: string
          description: Password of the user
          format: password

    ForgotPassword:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
          description: Email of the user

    ResetPassword:
      type: object
      properties:
        token:
          type: string
        password:
          type: string
        password_confirmation:
          type: string
      required:
        - token
        - password
        - password_confirmation

    EnterPinPassword:
      type: object
      properties:
        email:
          type: string
          format: email
        token:
          type: string
        pin:
          type: string
      required:
        - token
        - pin

    UpdateProfile:
      type: object
      properties:
        name:
          type: string
        last_name:
          type: string
        username:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        date_of_birth:
          type: string
        address:
          type: string
        zip_code:
          type: string
        city:
          type: string
        country:
          type: string
        gender:
          type: string
        role_id:
          type: integer

    UpdateProfilePhoto:
      type: object
      properties:
        photo:
          type: string
          format: binary

    NewPermission:
      type: object
      properties:
        name:
          type: string
          description: Name of the Permission

    UpdatePermission:
      type: object
      properties:
        name:
          type: string

    NewRole:
      type: object
      properties:
        name:
          type: string
          description: Name of the Role

    UpdateRole:
      type: object
      properties:
        name:
          type: string
        permission:
          type: array
          items:
            type: integer
          description: An array of permission IDs

    UpdateUser:
      type: object
      properties:
        name:
          type: string
        last_name:
          type: string
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        phone:
          type: string
        date_of_birth:
          type: string
        address:
          type: string
        zip_code:
          type: string
        city:
          type: string
        country:
          type: string
        gender:
          type: string
        terms_and_conditions:
          type: boolean
          default: false
        role_id:
          type: string

    CategoriesRegistration:
      type: object
      properties:
        category_name:
          type: string
          description: Name of the category
        category_description:
          type: string
          description: Description of the category
        category_image_path:
          type: string
          format: binary
          description: Category Image of the category

    UpdateCategories:
      type: object
      properties:
        category_name:
          type: string
        category_description:
          type: string

    UpdateServices:
      type: object
      properties:
        service_name:
          type: string
        service_description:
          type: string

    SubcategoriesRegistration:
      type: object
      properties:
        subcategory_name:
          type: string
          description: Name of the subcategory
        category_description:
          type: string
          description: Description of the subcategory
        category_id:
          type: integer
          description: Category of the subcategory

    UpdateSubcategories:
      type: object
      properties:
        subcategory_name:
          type: string
        subcategory_description:
          type: string
        category_id:
          type: integer

    BusinessRegistration:
      type: object
      properties:
        business_name:
          type: string
          description: Name of the business
        business_email:
          type: string
          format: email
          description: Email of the business
        business_phone:
          type: string
          description: Phone of the business
        business_address:
          type: string
          description: Address of the business
        business_zipcode:
          type: string
          description: Zip Code of the business
        business_city:
          type: string
          description: City of the business
        business_country:
          type: string
          description: Country of the business
        business_website:
          type: string
          description: Website of the business
        business_about_us:
          type: string
          description: About of the business
        business_services:
          type: array
          items:
            type: integer
          description: Services of the business

        business_additional_info:
          type: string
          description: Additional Information of the business
        business_latitude:
          type: number
          format: double
          description: Latitude of the business
        business_longitude:
          type: number
          format: double
          description: Longitude of the business
        category_id:
          type: integer
          description: Category of the business
        business_logo:
          type: string
          format: binary
        business_opening_hours:
          type: object
          properties:
            day_0:
              type: object
              properties:
                open_a:
                  type: string
                close_a:
                  type: string
                open_b:
                  type: string
                close_b:
                  type: string
            day_1:
              type: object
              properties:
                open_a:
                  type: string
                open_b:
                  type: string
                close_a:
                  type: string
                close_b:
                  type: string
            day_2:
              type: object
              properties:
                open_a:
                  type: string
                close_a:
                  type: string
                open_b:
                  type: string
                close_b:
                  type: string
            day_3:
              type: object
              properties:
                open_a:
                  type: string
                close_a:
                  type: string
                open_b:
                  type: string
                close_b:
                  type: string
            day_4:
              type: object
              properties:
                open_a:
                  type: string
                close_a:
                  type: string
                open_b:
                  type: string
                close_b:
                  type: string
            day_5:
              type: object
              properties:
                open_a:
                  type: string
                close_a:
                  type: string
                open_b:
                  type: string
                close_b:
                  type: string
            day_6:
              type: object
              properties:
                open_a:
                  type: string
                close_a:
                  type: string
                open_b:
                  type: string
                close_b:
                  type: string

    BranchRegistration:
      type: object
      properties:
        branch_logo:
          type: string
          format: binary
        branch_name:
          type: string
          description: Name of the business branch
        branch_email:
          type: string
          format: email
          description: Email of the business branch
        branch_phone:
          type: string
          description: Phone of the business branch
        branch_address:
          type: string
          description: Address of the business branch
        branch_zipcode:
          type: string
          description: Zip Code of the business branch
        branch_city:
          type: string
          description: City of the business branch
        branch_country:
          type: string
          description: Country of the business branch
        branch_website:
          type: string
          description: Website of the business branch
        branch_about_us:
          type: string
          description: About of the business branch
        branch_services:
          type: array
          items:
            type: integer
          description: Services of the business branch
        branch_additional_info:
          type: string
          description: Additional Info of the business branch
        branch_latitude:
          type: number
          format: double
          description: Latitude of the business branch
        branch_longitude:
          type: number
          format: double
          description: Longitude of the business branch
        business_id:
          type: integer
          description: Id of the business to be associated with the branch

    UpdateBusiness:
      type: object
      properties:
        business_name:
          type: string
        business_email:
          type: string
          format: email
        business_phone:
          type: string
        business_address:
          type: string
        business_zipcode:
          type: string
        business_city:
          type: string
        business_country:
          type: string
        business_website:
          type: string
        business_about_us:
          type: string
        business_services:
          type: array
          items:
            type: integer
          description: Services of the business
        business_additional_info:
          type: string
        business_latitude:
          type: number
          format: double
        business_longitude:
          type: number
          format: double
        category_id:
          type: integer
        business_opening_hours:
          type: object
          properties:
            day_0:
              type: object
              properties:
                open_a:
                  type: string
                close_a:
                  type: string
                open_b:
                  type: string
                close_b:
                  type: string
            day_1:
              type: object
              properties:
                open_a:
                  type: string
                open_b:
                  type: string
                close_a:
                  type: string
                close_b:
                  type: string
            day_2:
              type: object
              properties:
                open_a:
                  type: string
                close_a:
                  type: string
                open_b:
                  type: string
                close_b:
                  type: string
            day_3:
              type: object
              properties:
                open_a:
                  type: string
                close_a:
                  type: string
                open_b:
                  type: string
                close_b:
                  type: string
            day_4:
              type: object
              properties:
                open_a:
                  type: string
                close_a:
                  type: string
                open_b:
                  type: string
                close_b:
                  type: string
            day_5:
              type: object
              properties:
                open_a:
                  type: string
                close_a:
                  type: string
                open_b:
                  type: string
                close_b:
                  type: string
            day_6:
              type: object
              properties:
                open_a:
                  type: string
                close_a:
                  type: string
                open_b:
                  type: string
                close_b:
                  type: string

    BranchCoverImagesRegistration:
      type: object
      properties:
        branch_image_path:
          type: array
          items:
            type: string
            format: binary
        branch_id:
          type: integer
          description: Id of the branch

    UpdateBusinessLogo:
      type: object
      properties:
        business_logo:
          type: string
          format: binary

    UpdateCategoryImage:
      type: object
      properties:
        category_image_path:
          type: string
          format: binary

    UpdateServiceImage:
      type: object
      properties:
        service_image_path:
          type: string
          format: binary

    UpdateBusinessCoverImages:
      type: object
      properties:
        business_image_path:
          type: string
          format: binary

    UpdateBranch:
      type: object
      properties:
        branch_name:
          type: string
        branch_email:
          type: string
          format: email
        branch_phone:
          type: string
        branch_address:
          type: string
        branch_zipcode:
          type: string
        branch_city:
          type: string
        branch_country:
          type: string
        branch_website:
          type: string
        branch_about_us:
          type: string
        branch_services:
          type: array
          items:
            type: integer
          description: Services of the business
        branch_additional_info:
          type: string
        branch_latitude:
          type: number
          format: double
        branch_longitude:
          type: number
          format: double
        business_id:
          type: integer

    UpdateBranchCoverImages:
      type: object
      properties:
        branch_image_path:
          type: string
          format: binary

    UpdateBranchLogo:
      type: object
      properties:
        branch_logo:
          type: string
          format: binary

    PromotionsRegistration:
      type: object
      properties:
        business_uuid:
          type: string
          format: uuid
          description: UUID of the associated business
          example: "01ba7b46-b656-4e25-bee4-fbfeab431191"
        title:
          type: string
          description: Title of the promotion
          example: "Descuento de verano"
        sub_title:
          type: string
          description: Subtitle of the promotion
          example: "¡Oferta especial de verano!"
        description:
          type: string
          description: Detailed description of the promotion
          example: "¡Aprovecha nuestro descuento especial de verano!"
        start_date:
          type: string
          format: date
          description: Start date of the promotion
          example: "2024-06-15"
        expire_date:
          type: string
          format: date
          description: End date of the promotion
          example: "2024-08-31"
        versions:
          type: array
          items:
            type: string
          description: Available versions/sizes of the promotion
          example: ["regular", "medium", "big"]
        prices:
          type: object
          description: Prices for each version
          properties:
            regular:
              type: number
              format: float
            medium:
              type: number
              format: float
            big:
              type: number
              format: float
          example:
            regular: 5.99
            medium: 12.00
            big: 15.00
        promo_active_days:
          type: object
          description: Days when the promotion is active
          properties:
            day_0:
              type: boolean
            day_1:
              type: boolean
            day_2:
              type: boolean
            day_3:
              type: boolean
            day_4:
              type: boolean
            day_5:
              type: boolean
            day_6:
              type: boolean
          example:
            day_0: true
            day_1: false
            day_2: true
            day_3: true
            day_4: false
            day_5: true
            day_6: false
        available:
          type: boolean
          description: Availability status of the promotion
          example: true
        media_link:
          type: string
          description: URL of the promotion media content
          example: "https://example.com/promotions/summer-discount-video.mp4"

    UpdatePromotions:
      type: object
      properties:
        title:
          type: string
          description: Title of the promotion
          example: "Descuento de verano"
        sub_title:
          type: string
          description: Subtitle of the promotion
          example: "¡Oferta especial de verano!"
        description:
          type: string
          description: Detailed description of the promotion
          example: "¡Aprovecha nuestro descuento especial de verano!"
        start_date:
          type: string
          format: date
          description: Start date of the promotion
          example: "2024-06-15"
        expire_date:
          type: string
          format: date
          description: End date of the promotion
          example: "2024-08-31"
        versions:
          type: array
          items:
            type: string
          description: Available versions/sizes of the promotion
          example: ["regular", "medium", "big"]
        prices:
          type: object
          description: Prices for each version
          properties:
            regular:
              type: number
              format: float
            medium:
              type: number
              format: float
            big:
              type: number
              format: float
          example:
            regular: 5.99
            medium: 12.00
            big: 15.00
        promo_active_days:
          type: object
          description: Days when the promotion is active
          properties:
            day_0:
              type: boolean
            day_1:
              type: boolean
            day_2:
              type: boolean
            day_3:
              type: boolean
            day_4:
              type: boolean
            day_5:
              type: boolean
            day_6:
              type: boolean
          example:
            day_0: true
            day_1: false
            day_2: true
            day_3: true
            day_4: false
            day_5: true
            day_6: false
        available:
          type: boolean
          description: Availability status of the promotion
          example: true
        media_link:
          type: string
          description: URL of the promotion media content
          example: "https://example.com/promotions/summer-discount-video.mp4"
      required:
        - business_uuid
        - title

    BusinessPromotionMediaRegistration:
      type: object
      properties:
        business_promo_media_url:
          type: array
          items:
            type: string
            format: binary
        promotion_uuid:
          type: string
          description: Uuid of the promotion

    UpdatePromotionMedia:
      type: object
      properties:
        business_promo_media_url:
          type: string
          format: binary

    BranchPromotionsRegistration:
      type: object
      properties:
        promotion_branch_title:
          type: string
          description: Title of the branch promotion
        promotion_branch_description:
          type: string
          description: Description of the branch promotion
        promotion_branch_start_date:
          type: string
          description: Start date of the branch promotion
        promotion_branch_end_date:
          type: string
          description: End date of the branch promotion
        promotion__branch_type:
          type: string
          description: Type of the branch promotion
        promotion_branch_status:
          type: string
          description: Status of the branch promotion
        branch_id:
          type: integer
          description: ID of the associated branch

    UpdateBranchPromotions:
      type: object
      properties:
        promotion_branch_title:
          type: string
          description: Title of the branch promotion
        promotion_branch_description:
          type: string
          description: Description of the branch promotion
        promotion_branch_start_date:
          type: string
          description: Start date of the branch promotion
        promotion_branch_end_date:
          type: string
          description: End date of the branch promotion
        promotion_branch_type:
          type: string
          description: Type of the branch promotion
        promotion_branch_status:
          type: string
          description: Status of the branch promotion
        branch_id:
          type: integer
          description: ID of the associated branc

    BranchPromotionImagesRegistration:
      type: object
      properties:
        promotion_branch_image_path:
          type: array
          items:
            type: string
            format: binary
        promotion_branch_id:
          type: integer
          description: Id of the branch promotion

    UpdateBranchPromotionImages:
      type: object
      properties:
        promotion_branch_image_path:
          type: string
          format: binary

    SocialLoginRegistration:
      type: object
      properties:
        provider:
          type: string
          description: Name of the Social Provider
        access_provider_token:
          type: string
          description: Access Provider Token of the Social Provider

    ServicesRegistration:
      type: object
      properties:
        service_name:
          type: string
          description: Name of the service
        service_description:
          type: string
          description: Description of the service
        service_image_path:
          type: string
          format: binary
          description: Service Image of the category

    BusinessMenuStore:
      type: object
      properties:
        business_id:
          type: integer
          description: Id of the Business
      required:
        - business_id

    BusinessFoodCategoryStore:
      type: object
      properties:
        business_menu_id:
          type: integer
          description: Id of the Business Menu
        name:
          type: string
          description: Name of the Food Category

    BusinessDrinkCategoryStore:
      type: object
      properties:
        business_menu_id:
          type: integer
          description: Id of the Business Menu
        name:
          type: string
          description: Name of the Food Category

    UpdateBusinessFoodCategory:
      type: object
      properties:
        name:
          type: string

    UpdateBusinessDrinkCategory:
      type: object
      properties:
        name:
          type: string

    BusinessFoodItemStore:
      type: object
      properties:
        business_food_category_id:
          type: integer
          description: Id of the Business Food Category
        name:
          type: string
          description: Name of the Food Item
        description:
          type: string
          description: Ensalada fresca con aderezo César
        versions:
          type: array
          items:
            type: string
          example: ["regular", "medium", "big"]
        prices:
          type: object
          properties:
            regular:
              type: number
              format: float
            medium:
              type: number
              format: float
            big:
              type: number
              format: float
          example:
            regular: 3.0
            medium: 4.5
            big: 6.0
        favorites_count:
          type: integer
          example: 7
        available:
          type: boolean
          example: true

    UpdateBusinessFoodItem:
      type: object
      properties:
        business_food_category_id:
          type: integer
          description: Id of the Business Food Category
        name:
          type: string
          description: Name of the Food Item
        description:
          type: string
        versions:
          type: array
          items:
            type: string
          example: ["regular", "medium", "big"]
        prices:
          type: object
          properties:
            regular:
              type: number
              format: float
            medium:
              type: number
              format: float
            big:
              type: number
              format: float
          example:
            regular: 3.0
            medium: 4.5
            big: 6.0
        favorites_count:
          type: integer
          example: 7
        available:
          type: boolean
          example: true

    BusinessDrinkItemStore:
      type: object
      properties:
        business_drink_category_id:
          type: integer
          description: Id of the Business Drink Category
        name:
          type: string
          description: Name of the Drink Item
        description:
          type: string
        versions:
          type: array
          items:
            type: string
          example: ["regular", "medium", "big"]
        prices:
          type: object
          properties:
            regular:
              type: number
              format: float
            medium:
              type: number
              format: float
            big:
              type: number
              format: float
          example:
            regular: 3.0
            medium: 4.5
            big: 6.0
        favorites_count:
          type: integer
          example: 7
        available:
          type: boolean
          example: true

    UpdateBusinessDrinkItem:
      type: object
      properties:
        business_drink_category_id:
          type: integer
          description: Id of the Business Drink Category
        name:
          type: string
          description: Name of the Food Item
        description:
          type: string
        versions:
          type: array
          items:
            type: string
          example: ["regular", "medium", "big"]
        prices:
          type: object
          properties:
            regular:
              type: number
              format: float
            medium:
              type: number
              format: float
            big:
              type: number
              format: float
          example:
            regular: 3.0
            medium: 4.5
            big: 6.0
        favorites_count:
          type: integer
          example: 7
        available:
          type: boolean
          example: true

    BusinessFoodReferencePhotos:
      type: object
      properties:
        business_food_photo_url:
          type: array
          items:
            type: string
            format: binary
        business_food_item_id:
          type: integer
          description: Id of the Business Food

    UpdateBusinessFoodReferencePhotos:
      type: object
      properties:
        business_food_photo_url:
          type: string
          format: binary

    BusinessDrinkReferencePhotos:
      type: object
      properties:
        business_drink_photo_url:
          type: array
          items:
            type: string
            format: binary
        business_drink_item_id:
          type: integer
          description: Id of the Business Drink

    UpdateBusinessDrinkReferencePhotos:
      type: object
      properties:
        business_drink_photo_url:
          type: string
          format: binary

    BusinessComboStore:
      type: object
      properties:
        business_menu_id:
          type: integer
          description: Id of the Business Menu
        name:
          type: string
          description: Name of the Business Combo
        description:
          type: string
        versions:
          type: array
          items:
            type: string
          example: ["regular", "medium", "big"]
        prices:
          type: object
          properties:
            regular:
              type: number
              format: float
            medium:
              type: number
              format: float
            big:
              type: number
              format: float
          example:
            regular: 3.0
            medium: 4.5
            big: 6.0
        favorites_count:
          type: integer
          example: 7
        available:
          type: boolean
          example: true

    UpdateBusinessCombo:
      type: object
      properties:
        business_menu_id:
          type: integer
          description: Id of the Business Menu
        name:
          type: string
          description: Name of the Business Combo
        description:
          type: string
        versions:
          type: array
          items:
            type: string
          example: ["regular", "medium", "big"]
        prices:
          type: object
          properties:
            regular:
              type: number
              format: float
            medium:
              type: number
              format: float
            big:
              type: number
              format: float
          example:
            regular: 3.0
            medium: 4.5
            big: 6.0
        favorites_count:
          type: integer
          example: 7
        available:
          type: boolean
          example: true

    BusinessComboPhotos:
      type: object
      properties:
        business_combos_photo_url:
          type: array
          items:
            type: string
            format: binary
        business_combos_id:
          type: integer
          description: Id of the Business Combo

    UpdateBusinessComboPhotos:
      type: object
      properties:
        business_combos_photo_url:
          type: string
          format: binary
    LocationSearchSchema:
      type: object
      required:
        - latitude
        - longitude
        - voice_text
      properties:
        latitude:
          type: number
          format: float
          description: Location latitude
          example: 40.2784256
        longitude:
          type: number
          format: float
          description: Location Length
          example: -7.4973184
        radius:
          type: number
          format: float
          description: Search radius in kilometers
          example: 5
        voice_text:
          type: string
          description: Voice Search Text
          example: "Find sushi restaurants near me"

    UserAddressStore:
      type: object
      properties:
        address:
          type: string
          description: Address of the user
        city:
          type: string
          description: City of the user
        country:
          type: string
          description: Country of the user
        zip_code:
          type: string
          description: Zip Code of the user
        latitude:
          type: number
          format: double
          description: Latitude of the user's address
        longitude:
          type: number
          format: double
          description: Longitude of the user's address
        address_label_id:
          type: integer
          description: ID of the address label
        principal:
          type: boolean
          description: Whether this address is the principal address

    UserAddressResponse:
      type: object
      properties:
        id:
          type: integer
          description: ID of the address
        uuid:
          type: string
          format: uuid
          description: UUID of the address
        address:
          type: string
          description: Address of the user
        city:
          type: string
          description: City of the user
        country:
          type: string
          description: Country of the user
        zip_code:
          type: string
          description: Zip Code of the user
        latitude:
          type: number
          format: double
          description: Latitude of the user's address
        longitude:
          type: number
          format: double
          description: Longitude of the user's address
        address_label_id:
          type: integer
          description: ID of the address label
        address_label:
          type: object
          description: Label of the address
          properties:
            id:
              type: integer
              description: ID of the address label
            uuid:
              type: string
              format: uuid
              description: UUID of the address label
            name:
              type: string
              description: Name of the address label
            description:
              type: string
              description: Description of the address label
            icon:
              type: string
              description: Icon of the address label
        principal:
          type: boolean
          description: Whether this address is the principal address
        created_at:
          type: string
          format: date-time
          description: Date and time when the address was created
        updated_at:
          type: string
          format: date-time
          description: Date and time when the address was last updated

    UserAddressUpdate:
      type: object
      properties:
        address:
          type: string
          description: Address of the user
        city:
          type: string
          description: City of the user
        country:
          type: string
          description: Country of the user
        zip_code:
          type: string
          description: Zip Code of the user
        latitude:
          type: number
          format: double
          description: Latitude of the user's address
        longitude:
          type: number
          format: double
          description: Longitude of the user's address
        address_label_id:
          type: integer
          description: ID of the address label
        principal:
          type: boolean
          description: Whether this address is the principal address

    # Address Label Schemas
    AddressLabelStore:
      type: object
      required:
        - name
        - description
        - icon
      properties:
        name:
          type: string
          description: Unique name for the address label
          example: "Emergency"
          maxLength: 50
        description:
          type: string
          description: Description of the address label
          example: "Emergency contact address"
          maxLength: 255
        icon:
          type: string
          description: Icon identifier for the label
          example: "alert-circle"
          maxLength: 50
        is_active:
          type: boolean
          description: Whether the label is active
          default: true
          example: true

    AddressLabelUpdate:
      type: object
      properties:
        name:
          type: string
          description: Unique name for the address label
          example: "Office"
          maxLength: 50
        description:
          type: string
          description: Description of the address label
          example: "Updated workplace address description"
          maxLength: 255
        icon:
          type: string
          description: Icon identifier for the label
          example: "building"
          maxLength: 50
        is_active:
          type: boolean
          description: Whether the label is active
          example: true

    AddressLabelResponse:
      type: object
      properties:
        id:
          type: integer
          description: Internal ID
          example: 1
        uuid:
          type: string
          format: uuid
          description: UUID of the address label
          example: "550e8400-e29b-41d4-a716-446655440001"
        name:
          type: string
          description: Name of the address label
          example: "Home"
        description:
          type: string
          description: Description of the address label
          example: "Primary residence address"
        icon:
          type: string
          description: Icon identifier for the label
          example: "home"
        is_active:
          type: boolean
          description: Whether the label is active
          example: true
        created_at:
          type: string
          format: date-time
          example: "2025-02-25T10:30:00.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-02-25T10:30:00.000000Z"
